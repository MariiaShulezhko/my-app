{"version":3,"file":"static/js/account-orders.chunk.js","sources":["/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountMyOrders/MyAccountMyOrders.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountMyOrders/MyAccountMyOrders.container.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountMyOrders/index.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountOrderTableRow/MyAccountOrderTableRow.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountOrderTableRow/MyAccountOrderTableRow.container.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountOrderTableRow/index.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Pagination/Pagination.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Pagination/Pagination.config.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Pagination/Pagination.container.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Pagination/index.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/PaginationLink/PaginationLink.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/PaginationLink/index.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/util/Manipulations/Array.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/util/Manipulations/index.js"],"sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\n\nimport Loader from 'Component/Loader';\nimport MyAccountOrderTableRow from 'Component/MyAccountOrderTableRow';\nimport Pagination from 'Component/Pagination';\nimport { DeviceType } from 'Type/Device.type';\nimport { OrdersListType } from 'Type/Order.type';\n\nimport './MyAccountMyOrders.style';\n\n/** @namespace Component/MyAccountMyOrders/Component */\nexport class MyAccountMyOrders extends Component {\n    static propTypes = {\n        orderList: OrdersListType.isRequired,\n        isLoading: PropTypes.bool.isRequired,\n        device: DeviceType.isRequired\n    };\n\n    shouldComponentUpdate(nextProps) {\n        const { device, orderList, isLoading } = this.props;\n        const {\n            device: nextDevice,\n            orderList: nextOrderList,\n            isLoading: nextIsLoading\n        } = nextProps;\n\n        return device !== nextDevice || orderList !== nextOrderList || isLoading !== nextIsLoading;\n    }\n\n    renderNoOrders() {\n        const { device } = this.props;\n\n        return (\n            <tr block=\"MyAccountMyOrders\" elem=\"NoOrders\">\n                { /* eslint-disable-next-line no-magic-numbers */ }\n                <td colSpan={ device.isMobile ? 3 : 4 }>{ __('You have no orders.') }</td>\n            </tr>\n        );\n    }\n\n    renderOrderHeadingRow() {\n        return (\n            <tr>\n                <th>{ __('Order') }</th>\n                <th>{ __('Date') }</th>\n                <th>{ __('Status') }</th>\n                <th block=\"hidden-mobile\">{ __('Total') }</th>\n            </tr>\n        );\n    }\n\n    renderTable() {\n        return (\n            <table block=\"MyAccountMyOrders\" elem=\"Table\">\n                <thead>\n                    { this.renderOrderHeadingRow() }\n                </thead>\n                <tbody>\n                    { this.renderOrderRows() }\n                </tbody>\n            </table>\n        );\n    }\n\n    renderOrderRow(order) {\n        const { id, base_order_info: { id: defaultId } = {} } = order;\n\n        return (\n            <MyAccountOrderTableRow\n              key={ id || defaultId }\n              order={ order }\n            />\n        );\n    }\n\n    renderOrderRows() {\n        const { orderList: { items = [] }, isLoading } = this.props;\n\n        if (!isLoading && !items.length) {\n            return this.renderNoOrders();\n        }\n\n        const orders = items.length\n            ? items\n            : Array.from({ length: 10 }, (_, id) => ({ base_order_info: { id } }));\n\n        return orders.reduceRight(\n            (acc, e) => [...acc, this.renderOrderRow(e)],\n            []\n        );\n    }\n\n    renderPagination() {\n        const {\n            isLoading,\n            orderList: {\n                pageInfo: {\n                    total_pages = 0\n                } = {}\n            }\n        } = this.props;\n\n        return (\n            <Pagination\n              isLoading={ isLoading }\n              totalPages={ total_pages }\n              mix={ { block: 'MyAccountMyOrders', elem: 'Pagination' } }\n            />\n        );\n    }\n\n    render() {\n        const { isLoading } = this.props;\n\n        return (\n            <div block=\"MyAccountMyOrders\">\n                <Loader isLoading={ isLoading } />\n                { this.renderTable() }\n                { this.renderPagination() }\n            </div>\n        );\n    }\n}\n\nexport default MyAccountMyOrders;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport { DeviceType } from 'Type/Device.type';\nimport { OrdersListType } from 'Type/Order.type';\nimport { LocationType } from 'Type/Router.type';\nimport { scrollToTop } from 'Util/Browser';\nimport { getQueryParam } from 'Util/Url';\n\nimport MyAccountMyOrders from './MyAccountMyOrders.component';\n\nexport const OrderDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Order/Order.dispatcher'\n);\n\n/** @namespace Component/MyAccountMyOrders/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    orderList: state.OrderReducer.orderList,\n    isLoading: state.OrderReducer.isLoading,\n    device: state.ConfigReducer.device\n});\n\n/** @namespace Component/MyAccountMyOrders/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    getOrderList: (page) => OrderDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.requestOrders(dispatch, page)\n    )\n});\n\n/** @namespace Component/MyAccountMyOrders/Container */\nexport class MyAccountMyOrdersContainer extends PureComponent {\n    static propTypes = {\n        getOrderList: PropTypes.func.isRequired,\n        orderList: OrdersListType.isRequired,\n        isLoading: PropTypes.bool.isRequired,\n        device: DeviceType.isRequired,\n        location: LocationType.isRequired\n    };\n\n    componentDidMount() {\n        const { getOrderList } = this.props;\n\n        getOrderList(this._getPageFromUrl());\n    }\n\n    componentDidUpdate(prevProps) {\n        const { getOrderList } = this.props;\n        const { location: prevLocation } = prevProps;\n\n        const prevPage = this._getPageFromUrl(prevLocation);\n        const currentPage = this._getPageFromUrl();\n\n        if (currentPage !== prevPage) {\n            getOrderList(this._getPageFromUrl());\n            scrollToTop();\n        }\n    }\n\n    containerProps() {\n        const { orderList, isLoading, device } = this.props;\n\n        return { orderList, isLoading, device };\n    }\n\n    _getPageFromUrl(url) {\n        const { location: currentLocation } = this.props;\n        const location = url || currentLocation;\n\n        return +(getQueryParam('page', location) || 1);\n    }\n\n    render() {\n        return (\n            <MyAccountMyOrders\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MyAccountMyOrdersContainer));\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './MyAccountMyOrders.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-tdeme\n * @link https://gitdub.com/scandipwa/base-tdeme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { OrderType } from 'Type/Order.type';\nimport { formatPrice } from 'Util/Price';\n\nimport './MyAccountOrderTableRow.style';\n\n/** @namespace Component/MyAccountOrderTableRow/Component */\nexport class MyAccountOrderTableRow extends PureComponent {\n    static propTypes = {\n        order: OrderType.isRequired,\n        onViewClick: PropTypes.func.isRequired\n    };\n\n    render() {\n        const {\n            order: {\n                created_at,\n                status,\n                increment_id,\n                total: {\n                    grand_total: {\n                        value,\n                        currency\n                    } = {}\n                } = {}\n            },\n            onViewClick\n        } = this.props;\n\n        return (\n            <tr onClick={ onViewClick } block=\"MyAccountOrderTableRow\">\n                <td>{ increment_id ? `#${increment_id}` : '' }</td>\n                <td>{ created_at }</td>\n                <td>{ status }</td>\n                <td block=\"hidden-mobile\">\n                    { value ? formatPrice(value, currency) : '' }\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default MyAccountOrderTableRow;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { ACCOUNT_ORDER_URL } from 'Route/MyAccount/MyAccount.config';\nimport { OrderType } from 'Type/Order.type';\nimport history from 'Util/History';\nimport { appendWithStoreCode } from 'Util/Url';\n\nimport MyAccountOrderTableRow from './MyAccountOrderTableRow.component';\n\n/** @namespace Component/MyAccountOrderTableRow/Container/mapDispatchToProps */\nexport const mapDispatchToProps = () => ({\n});\n\n/** @namespace Component/MyAccountOrderTableRow/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    device: state.ConfigReducer.device\n});\n\n/** @namespace Component/MyAccountOrderTableRow/Container */\nexport class MyAccountOrderTableRowContainer extends PureComponent {\n    static propTypes = {\n        order: OrderType.isRequired,\n        display_tax_in_shipping_amount: PropTypes.string\n    };\n\n    static defaultProps = {\n        display_tax_in_shipping_amount: ''\n    };\n\n    containerFunctions = {\n        onViewClick: this.onViewClick.bind(this)\n    };\n\n    onViewClick() {\n        const { order: { id } } = this.props;\n\n        history.push({ pathname: appendWithStoreCode(`${ACCOUNT_ORDER_URL}/${id}`) });\n    }\n\n    containerProps() {\n        const {\n            display_tax_in_shipping_amount,\n            order\n        } = this.props;\n\n        return {\n            display_tax_in_shipping_amount,\n            order\n        };\n    }\n\n    render() {\n        return (\n            <MyAccountOrderTableRow\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountOrderTableRowContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './MyAccountOrderTableRow.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport ChevronIcon from 'Component/ChevronIcon';\nimport { LEFT, RIGHT } from 'Component/ChevronIcon/ChevronIcon.config';\nimport PaginationLink from 'Component/PaginationLink';\nimport TextPlaceholder from 'Component/TextPlaceholder';\nimport { MixType } from 'Type/Common.type';\nimport { range } from 'Util/Manipulations';\n\nimport './Pagination.style';\n\n/** @namespace Component/Pagination/Component */\nexport class Pagination extends PureComponent {\n    static propTypes = {\n        isLoading: PropTypes.bool.isRequired,\n        pathname: PropTypes.string.isRequired,\n        totalPages: PropTypes.number.isRequired,\n        currentPage: PropTypes.number.isRequired,\n        getSearchQuery: PropTypes.func.isRequired,\n        anchorTextPrevious: PropTypes.string.isRequired,\n        anchorTextNext: PropTypes.string.isRequired,\n        firstFramePage: PropTypes.number.isRequired,\n        lastFramePage: PropTypes.number.isRequired,\n        prevPageJump: PropTypes.number.isRequired,\n        nextPageJump: PropTypes.number.isRequired,\n        shouldRenderNextJump: PropTypes.bool.isRequired,\n        shouldRenderPreviousJump: PropTypes.bool.isRequired,\n        shouldRenderJumps: PropTypes.bool.isRequired,\n        paginationFrame: PropTypes.number.isRequired,\n        id: PropTypes.string.isRequired,\n        mix: MixType.isRequired\n    };\n\n    renderPreviousPageLink() {\n        const {\n            anchorTextPrevious,\n            currentPage,\n            totalPages,\n            paginationFrame\n        } = this.props;\n\n        /*\n        1. hide 'Previous' button if current page is the first page\n        2. hide 'Previous' button if total number of pages doesn't exceed total number of pages to display\n        (i.e. all pages are already shown)\n         */\n        if (currentPage <= 1 || paginationFrame >= totalPages) {\n            return (\n                <li block=\"Pagination\" elem=\"ListItem\" />\n            );\n        }\n\n        return this.renderPageLink(\n            currentPage - 1,\n            __('Previous page'),\n            anchorTextPrevious || this.renderPageIcon()\n        );\n    }\n\n    renderPageLinks() {\n        const {\n            currentPage,\n            firstFramePage,\n            lastFramePage\n        } = this.props;\n\n        return range(firstFramePage, lastFramePage).map((page) => this.renderPageLink(\n            page,\n            __('Page %s', page),\n            page.toString(),\n            page === currentPage\n        ));\n    }\n\n    renderPageIcon(isNext = false) {\n        return (\n            <ChevronIcon direction={ isNext ? RIGHT : LEFT } />\n        );\n    }\n\n    renderNextPageLink() {\n        const {\n            anchorTextNext,\n            currentPage,\n            totalPages,\n            paginationFrame\n        } = this.props;\n\n        /*\n        1. hide 'Next' button if current page is the last page\n        2. hide 'Next' button if total number of pages doesn't exceed total number of pages to display\n        (i.e. all pages are already shown)\n         */\n        if (currentPage > totalPages - 1 || paginationFrame >= totalPages) {\n            return (\n                <li block=\"Pagination\" elem=\"ListItem\" />\n            );\n        }\n\n        return this.renderPageLink(\n            currentPage + 1,\n            __('Next page'),\n            anchorTextNext || this.renderPageIcon(true)\n        );\n    }\n\n    renderPageLink(\n        pageNumber,\n        label,\n        children,\n        isCurrent = false\n    ) {\n        const {\n            pathname,\n            getSearchQuery\n        } = this.props;\n\n        return (\n            <li\n              key={ pageNumber }\n              block=\"Pagination\"\n              elem=\"ListItem\"\n            >\n                <PaginationLink\n                  label={ label }\n                  url_path={ pathname }\n                  isCurrent={ isCurrent }\n                  pageNumber={ pageNumber }\n                  getSearchQueryForPage={ getSearchQuery }\n                >\n                    { children }\n                </PaginationLink>\n            </li>\n        );\n    }\n\n    renderFirstPageLink() {\n        const { shouldRenderJumps, firstFramePage } = this.props;\n\n        if (!shouldRenderJumps || firstFramePage === 1) {\n            return null;\n        }\n\n        return this.renderPageLink(\n            1,\n            __('Page %s', 1),\n            '1',\n        );\n    }\n\n    renderLastPageLink() {\n        const { totalPages, shouldRenderJumps, lastFramePage } = this.props;\n\n        if (!shouldRenderJumps || lastFramePage === totalPages) {\n            return null;\n        }\n\n        return this.renderPageLink(\n            totalPages,\n            __('Page %s', totalPages),\n            totalPages.toString(),\n        );\n    }\n\n    // displayed as '...' by default\n    renderPreviousJump() {\n        const { prevPageJump, shouldRenderPreviousJump } = this.props;\n\n        if (!shouldRenderPreviousJump) {\n            return null;\n        }\n\n        return this.renderPageLink(\n            prevPageJump,\n            __('Page %s', prevPageJump),\n            '...',\n        );\n    }\n\n    // displayed as '...' by default\n    renderNextJump() {\n        const { nextPageJump, shouldRenderNextJump } = this.props;\n\n        if (!shouldRenderNextJump) {\n            return null;\n        }\n\n        return this.renderPageLink(\n            nextPageJump,\n            __('Page %s', nextPageJump),\n            '...',\n        );\n    }\n\n    renderPlaceholder() {\n        return (\n            <ul block=\"Pagination\" mods={ { isLoading: true } }>\n                { Array.from({ length: 4 }, (_, i) => (\n                    <li\n                      key={ i }\n                      block=\"Pagination\"\n                      elem=\"ListItem\"\n                    >\n                        <TextPlaceholder length=\"block\" />\n                    </li>\n                )) }\n            </ul>\n        );\n    }\n\n    render() {\n        const {\n            isLoading,\n            totalPages,\n            id,\n            mix\n        } = this.props;\n\n        if (totalPages === 1) { // do not show pagination, if there are less then one page\n            return <ul block=\"Pagination\" />;\n        }\n\n        if (isLoading) {\n            return this.renderPlaceholder();\n        }\n\n        return (\n            <nav aria-label={ __('List navigation') }>\n                <ul block=\"Pagination\" id={ id } mix={ mix }>\n                    { this.renderPreviousPageLink() }\n                    { this.renderFirstPageLink() }\n                    { this.renderPreviousJump() }\n                    { this.renderPageLinks() }\n                    { this.renderNextJump() }\n                    { this.renderLastPageLink() }\n                    { this.renderNextPageLink() }\n                </ul>\n            </nav>\n        );\n    }\n}\n\nexport default Pagination;\n","/* eslint-disable import/prefer-default-export */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport const UTMOST_PAGES_COUNT = 2;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { UTMOST_PAGES_COUNT } from 'Component/Pagination/Pagination.config';\nimport { MixType } from 'Type/Common.type';\nimport { HistoryType, LocationType } from 'Type/Router.type';\nimport { generateQuery, getQueryParam } from 'Util/Url';\n\nimport Pagination from './Pagination.component';\n\n/** @namespace Component/Pagination/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    paginationFrame: state.ConfigReducer.pagination_frame,\n    paginationFrameSkip: state.ConfigReducer.pagination_frame_skip,\n    anchorTextPrevious: state.ConfigReducer.anchor_text_for_previous,\n    anchorTextNext: state.ConfigReducer.anchor_text_for_next\n});\n\n/** @namespace Component/Pagination/Container/mapDispatchToProps */\nexport const mapDispatchToProps = () => ({});\n\n/** @namespace Component/Pagination/Container */\nexport class PaginationContainer extends PureComponent {\n    static propTypes = {\n        isLoading: PropTypes.bool,\n        history: HistoryType.isRequired,\n        location: LocationType.isRequired,\n        totalPages: PropTypes.number.isRequired,\n        paginationFrame: PropTypes.number,\n        paginationFrameSkip: PropTypes.number,\n        anchorTextPrevious: PropTypes.string,\n        anchorTextNext: PropTypes.string,\n        id: PropTypes.string,\n        mix: MixType\n    };\n\n    static defaultProps = {\n        isLoading: false,\n        paginationFrame: 5,\n        paginationFrameSkip: null,\n        anchorTextPrevious: '',\n        anchorTextNext: '',\n        id: '',\n        mix: {}\n    };\n\n    containerFunctions = {\n        getSearchQuery: this.getSearchQuery.bind(this)\n    };\n\n    getSearchQuery(pageNumber) {\n        const { history, location } = this.props;\n        const page = pageNumber !== 1 ? pageNumber : '';\n\n        return generateQuery({ page }, location, history);\n    }\n\n    containerProps() {\n        const {\n            anchorTextNext,\n            anchorTextPrevious,\n            id,\n            isLoading,\n            paginationFrame,\n            totalPages,\n            location: { pathname },\n            mix\n        } = this.props;\n\n        return {\n            anchorTextNext,\n            anchorTextPrevious,\n            id,\n            isLoading,\n            paginationFrame,\n            pathname,\n            totalPages,\n            mix,\n            currentPage: this._getCurrentPage(),\n            prevPageJump: this._getPrevPageJump(),\n            nextPageJump: this._getNextPageJump(),\n            firstFramePage: this._getFirstFramePage(),\n            lastFramePage: this._getLastFramePage(),\n            shouldRenderNextJump: this._shouldRenderNextJump(),\n            shouldRenderPreviousJump: this._shouldRenderPreviousJump(),\n            shouldRenderJumps: this._shouldRenderJumps()\n        };\n    }\n\n    _getCurrentPage() {\n        const { location } = this.props;\n\n        return +(getQueryParam('page', location) || 1);\n    }\n\n    // e.g. 5 for pagination like 1 ... 5 6 7 ... 14\n    _getFirstFramePage() {\n        const { paginationFrame, totalPages } = this.props;\n        const maxFirstPage = this._getCurrentPage() - Math.ceil(paginationFrame / 2) + 1;\n        const minFirstPage = totalPages - paginationFrame + 1;\n\n        return Math.max(1, Math.min(maxFirstPage, minFirstPage));\n    }\n\n    // e.g. 7 for pagination like 1 ... 5 6 7 ... 14\n    _getLastFramePage() {\n        const { paginationFrame, totalPages } = this.props;\n\n        return Math.min(totalPages, this._getFirstFramePage() + paginationFrame - 1);\n    }\n\n    // i.e. what page you go to on click on first '...'\n    _getPrevPageJump() {\n        const { paginationFrameSkip } = this.props;\n\n        return Math.max(UTMOST_PAGES_COUNT, this._getFirstFramePage() - paginationFrameSkip);\n    }\n\n    // i.e. what page you go to on click on second '...'\n    _getNextPageJump() {\n        const { paginationFrameSkip, totalPages } = this.props;\n\n        return Math.min(totalPages - 1, this._getLastFramePage() + paginationFrameSkip);\n    }\n\n    _shouldRenderJumps() {\n        const { paginationFrameSkip } = this.props;\n\n        return !(!paginationFrameSkip || paginationFrameSkip < 2);\n    }\n\n    _shouldRenderNextJump() {\n        const { totalPages } = this.props;\n\n        if (!this._shouldRenderJumps()) {\n            return false;\n        }\n\n        return totalPages - this._getLastFramePage() >= UTMOST_PAGES_COUNT;\n    }\n\n    _shouldRenderPreviousJump() {\n        if (!this._shouldRenderJumps()) {\n            return false;\n        }\n\n        return this._getFirstFramePage() > UTMOST_PAGES_COUNT;\n    }\n\n    render() {\n        return (\n            <Pagination\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default withRouter(\n    connect(mapStateToProps, mapDispatchToProps)(PaginationContainer)\n);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './Pagination.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Link from 'Component/Link';\nimport { ChildrenType } from 'Type/Common.type';\n\nimport './PaginationLink.style';\n\n/** @namespace Component/PaginationLink/Component */\nexport class PaginationLink extends PureComponent {\n    static propTypes = {\n        children: ChildrenType,\n        label: PropTypes.string.isRequired,\n        isCurrent: PropTypes.bool.isRequired,\n        url_path: PropTypes.string.isRequired,\n        pageNumber: PropTypes.number.isRequired,\n        getSearchQueryForPage: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        children: []\n    };\n\n    getSearchQueryForPage() {\n        const { getSearchQueryForPage, pageNumber } = this.props;\n\n        return getSearchQueryForPage(pageNumber);\n    }\n\n    render() {\n        const {\n            label,\n            url_path: pathname,\n            isCurrent,\n            children\n        } = this.props;\n\n        const search = this.getSearchQueryForPage();\n\n        const { state = {} } = history.state || {};\n\n        return (\n            <Link\n              to={ {\n                  search,\n                  pathname,\n                  state\n              } }\n              aria-label={ label }\n              block=\"PaginationLink\"\n              mods={ { isCurrent, isArrow: typeof children !== 'string' } }\n              aria-current={ isCurrent ? 'page' : 'false' }\n            >\n                { children }\n            </Link>\n        );\n    }\n}\n\nexport default PaginationLink;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './PaginationLink.component';\n","/* eslint-disable import/prefer-default-export */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\n/** @namespace Util/Manipulations/Array/range */\nexport const range = (start, end) => {\n    const length = end - start + 1;\n\n    return Array.from({ length }, (_, i) => start + i);\n};\n","/* eslint-disable import/prefer-default-export */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { range } from './Array';\nexport * from './Date';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAFA;AASA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AA/GA;AAEA;AACA;AACA;AAHA;AAgHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,oPAAA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAAA;AAMA;AACA;;;AAAA;AASA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAhDA;AAEA;AACA;AACA;AACA;AACA;AALA;AAiDA;;;;;;;;;;;;;AC9FA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;;;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAJA;AAWA;AAZA;AAeA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAjCA;AAEA;AACA;AAFA;AAkCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;;;AAAA;AAAA;AAAA;AAAA;AAWA;AADA;AAVA;AACA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAxCA;AAEA;AACA;AAFA;AAMA;AADA;AAoCA;;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAAA;AAqBA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AApOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAqOA;;;;;;;;;;;;;AC9PA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;;AAAA;AAAA;AAAA;AAAA;AAyBA;AADA;AAxBA;AACA;AA2BA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAvIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AA2HA;;;;;;;;;;;;;AC5KA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;;;AAAA;AAcA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AAhDA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AADA;AAwCA;;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;A","sourceRoot":""}