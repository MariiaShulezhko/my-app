{"version":3,"file":"static/js/product-attributes.chunk.js","sources":["/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/ProductAttributes/ProductAttributes.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/ProductAttributes/ProductAttributes.container.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/ProductAttributes/index.js"],"sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { Fragment, PureComponent } from 'react';\n\nimport ExpandableContent from 'Component/ExpandableContent';\nimport ProductAttributeValue from 'Component/ProductAttributeValue';\nimport { AttributeType } from 'Type/ProductList.type';\n\nimport './ProductAttributes.style';\n\n/** @namespace Component/ProductAttributes/Component */\nexport class ProductAttributes extends PureComponent {\n    static propTypes = {\n        areDetailsLoaded: PropTypes.bool.isRequired,\n        attributesWithValues: AttributeType.isRequired\n    };\n\n    renderGroups() {\n        const { attributesWithValues } = this.props;\n\n        const groups = Object.values(attributesWithValues).map(\n            (attribute) => ({\n                attribute_group_id: attribute.attribute_group_id,\n                attribute_group_name: attribute.attribute_group_name\n            })\n        );\n\n        const uniqueGroups = groups.filter(\n            (group, index, array) => (\n                index === array.findIndex((g) => g.attribute_group_id === group.attribute_group_id)\n            )\n        );\n\n        return (\n            uniqueGroups.map(\n                (group) => (\n                    <div block=\"ProductAttributes\" elem=\"AttributeBlock\" key={ group.attribute_group_name }>\n                        <h2 block=\"ProductAttributes\" elem=\"Group\">\n                            { group.attribute_group_name }\n                        </h2>\n                        { this.renderAttributes(group.attribute_group_id) }\n                    </div>\n                )\n            )\n        );\n    }\n\n    renderAttribute(attribute) {\n        return (\n            <Fragment key={ attribute.attribute_label }>\n                <dt block=\"ProductAttributes\" elem=\"AttributeLabel\">\n                    { attribute.attribute_label }\n                </dt>\n                <dd block=\"ProductAttributes\" elem=\"ValueLabel\">\n                    <ProductAttributeValue\n                      key={ attribute.attribute_label }\n                      attribute={ attribute }\n                      isFormattedAsText\n                    />\n                </dd>\n            </Fragment>\n        );\n    }\n\n    renderAttributes(attribute_group_id) {\n        const { attributesWithValues } = this.props;\n\n        if (!Object.keys(attributesWithValues).length) {\n            return null;\n        }\n\n        const filteredAttributesWithValues = Object.values(attributesWithValues).filter(\n            (attribute) => attribute.attribute_group_id === attribute_group_id\n        );\n\n        if (!filteredAttributesWithValues.length) {\n            return null;\n        }\n\n        return (\n            <dl block=\"ProductAttributes\" elem=\"Attributes\">\n                { filteredAttributesWithValues.map(this.renderAttribute.bind(this)) }\n            </dl>\n        );\n    }\n\n    renderContent() {\n        const { areDetailsLoaded } = this.props;\n        const heading = areDetailsLoaded ? __('Details') : '';\n\n        return (\n            <ExpandableContent\n              // show placeholder if the details are not loaded\n              heading={ heading }\n              mix={ { block: 'ProductAttributes', elem: 'Content' } }\n            >\n                    { this.renderGroups() }\n            </ExpandableContent>\n        );\n    }\n\n    render() {\n        const {\n            areDetailsLoaded\n        } = this.props;\n\n        if (!areDetailsLoaded) {\n            return null;\n        }\n\n        return this.renderContent();\n    }\n}\n\nexport default ProductAttributes;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { ProductType } from 'Type/ProductList.type';\nimport { getAttributesWithValues } from 'Util/Product';\n\nimport ProductAttributes from './ProductAttributes.component';\n\n/** @namespace Component/ProductAttributes/Container */\nexport class ProductAttributesContainer extends PureComponent {\n    static propTypes = {\n        product: ProductType.isRequired,\n        areDetailsLoaded: PropTypes.bool.isRequired\n    };\n\n    containerProps() {\n        const { areDetailsLoaded, product } = this.props;\n\n        return {\n            areDetailsLoaded,\n            attributesWithValues: getAttributesWithValues(product)\n        };\n    }\n\n    render() {\n        return (\n            <ProductAttributes\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default ProductAttributesContainer;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './ProductAttributes.container';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;;;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAAA;AAMA;AACA;AACA;AAAA;AADA;AAKA;AAEA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AArGA;AAEA;AACA;AAFA;AAsGA;;;;;;;;;;;;;;;;;;;;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;;;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAtBA;AAEA;AACA;AAFA;AAuBA;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}