{"version":3,"sources":["../node_modules/@scandipwa/scandipwa/src/component/RenderWhenVisible/index.js","../node_modules/intersection-observer/intersection-observer.js","../node_modules/react-intersection-observer/react-intersection-observer.m.js","../node_modules/@scandipwa/scandipwa/src/component/WidgetFactory/WidgetFactory.config.js","../node_modules/@scandipwa/scandipwa/src/component/WidgetFactory/index.js","../node_modules/@scandipwa/scandipwa/src/component/WidgetFactory/WidgetFactory.component.js","../node_modules/@scandipwa/scandipwa/src/component/RenderWhenVisible/RenderWhenVisible.component.js"],"names":["window","IntersectionObserverEntry","prototype","Object","defineProperty","get","this","intersectionRatio","document","startDoc","doc","frame","getFrameElement","ownerDocument","registry","crossOriginUpdater","crossOriginRect","IntersectionObserver","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","_setupCrossOriginUpdater","boundingClientRect","intersectionRect","convertFromParentRect","top","bottom","left","right","width","height","forEach","observer","_checkForIntersections","_resetCrossOriginUpdater","observe","target","_observationTargets","some","item","element","nodeType","Error","_registerInstance","push","entry","_monitorIntersections","unobserve","filter","_unmonitorIntersections","length","_unregisterInstance","disconnect","_unmonitorAllIntersections","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","threshold","Array","isArray","sort","t","i","a","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","exec","value","parseFloat","unit","win","defaultView","_monitoringDocuments","indexOf","callback","monitoringInterval","domObserver","setInterval","addEvent","MutationObserver","attributes","childList","characterData","subtree","_monitoringUnsubscribes","clearInterval","removeEvent","rootDoc","root","index","itemDoc","unsubscribe","splice","unsubscribes","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","_computeTargetAndRootIntersection","rootBounds","newEntry","time","performance","now","_hasCrossedThreshold","isIntersecting","_callback","getComputedStyle","display","parent","getParentNode","atRoot","parentRect","parentComputedStyle","frameRect","frameIntersect","body","documentElement","overflow","computeRectIntersection","isDoc","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","frameElement","e","ensureDOMRect","targetArea","intersectionArea","Number","toFixed","opt_options","options","fn","timeout","timer","setTimeout","throttle","bind","rootMargin","join","node","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detachEvent","rect1","rect2","Math","max","min","el","err","y","x","parentBoundingRect","parentIntersectionRect","child","parentNode","assignedSlot","host","_extends","assign","arguments","source","key","hasOwnProperty","call","apply","_setPrototypeOf","o","p","setPrototypeOf","__proto__","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","optionsToId","keys","has","set","toString","fallbackInView","bounds","_createObserver","id","instance","elements","entries","_elements$get","inView","trackVisibility","isVisible","createObserver","callbacks","size","_excluded","isPlainChildren","props","children","InView","_React$Component","subClass","superClass","_this","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","onChange","state","create","constructor","_proto","componentDidUpdate","prevProps","delay","componentWillUnmount","_this$props","render","_this$state","ref","_this$props2","as","excluded","sourceKeys","_objectWithoutPropertiesLoose","displayName","defaultProps","SLIDER","NEW_PRODUCTS","CATALOG_PRODUCT_LIST","RECENTLY_VIEWED","ProductListWidget","lazy","NewProducts","HomeSlider","RecentlyViewedWidget","renderMap","component","fallback","renderSliderFallback","block","elem","type","sliderId","displayType","productsCount","showPager","storeId","title","conditionsEncoded","Widget","renderDefaultFallback","renderFallback","renderContent","PureComponent","WidgetFactory","wasVisible","handleVisibilityToggle","checkIsVisible","viewHeight","innerHeight","isSSR","isCrawler","fallbackRender","shouldRender","renderVisibilitySensor","renderChildren","noopFn","RenderWhenVisible"],"mappings":"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","file":"static/js/widget.a9a7e115.chunk.js","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\nexport { default } from './RenderWhenVisible.component';\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (\n    options.root &&\n    options.root.nodeType != 1 &&\n    options.root.nodeType != 9\n  ) {\n    throw new Error('root must be a Document or Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var rootBounds = null;\n    if (!this._rootContainsTarget(target)) {\n      rootBounds = getEmptyRect();\n    } else if (!crossOriginUpdater || this.root) {\n      rootBounds = rootRect;\n    }\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootBounds,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root && !isDoc(this.root)) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var doc = isDoc(this.root) ? this.root : document;\n    var html = doc.documentElement;\n    var body = doc.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  return (\n    containsDeep(rootDoc, target) &&\n    (!this.root || rootDoc == target.ownerDocument)\n  );\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detachEvent == 'function') {\n    node.detachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  // If the parent has element that is assigned through shadow root slot\n  if (parent && parent.assignedSlot) {\n    parent = parent.assignedSlot.parentNode\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  return parent;\n}\n\n/**\n * Returns true if `node` is a Document.\n * @param {!Node} node\n * @returns {boolean}\n */\nfunction isDoc(node) {\n  return node && node.nodeType === 9;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar observerMap = new Map();\nvar RootIds = new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = undefined;\n/**\r\n * What should be the default behavior if the IntersectionObserver is unsupported?\r\n * Ideally the polyfill has been loaded, you can have the following happen:\r\n * - `undefined`: Throw an error\r\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\r\n * **/\n\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(function (key) {\n    return options[key] !== undefined;\n  }).map(function (key) {\n    return key + \"_\" + (key === 'root' ? getRootId(options.root) : options[key]);\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  var id = optionsToId(options);\n  var instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    var elements = new Map();\n    var thresholds;\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var _elements$get;\n\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        var inView = entry.isIntersecting && thresholds.some(function (threshold) {\n          return entry.intersectionRatio >= threshold;\n        }); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(function (callback) {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id: id,\n      observer: observer,\n      elements: elements\n    };\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @param fallbackInView - Fallback inView value.\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options, fallbackInView) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (fallbackInView === void 0) {\n    fallbackInView = unsupportedValue;\n  }\n\n  if (typeof window.IntersectionObserver === 'undefined' && fallbackInView !== undefined) {\n    var bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return function () {// Nothing to cleanup\n    };\n  } // An observer with the same options can be reused, so lets use this fact\n\n\n  var _createObserver = createObserver(options),\n      id = _createObserver.id,\n      observer = _createObserver.observer,\n      elements = _createObserver.elements; // Register the callback listener for this element\n\n\n  var callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements[\"delete\"](element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap[\"delete\"](id);\n    }\n  };\n}\n\nvar _excluded = [\"children\", \"as\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\", \"fallbackInView\"];\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.node = null;\n    _this._unobserveCb = null;\n\n    _this.handleNode = function (node) {\n      if (_this.node) {\n        // Clear the old observer, before we start observing a new element\n        _this.unobserve();\n\n        if (!node && !_this.props.triggerOnce && !_this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          _this.setState({\n            inView: !!_this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    };\n\n    _this.handleChange = function (inView, entry) {\n      if (inView && _this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        _this.unobserve();\n      }\n\n      if (!isPlainChildren(_this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    };\n\n    _this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node || this.props.skip) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin,\n        trackVisibility = _this$props.trackVisibility,\n        delay = _this$props.delay,\n        fallbackInView = _this$props.fallbackInView;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin,\n      // @ts-ignore\n      trackVisibility: trackVisibility,\n      // @ts-ignore\n      delay: delay\n    }, fallbackInView);\n  };\n\n  _proto.unobserve = function unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  };\n\n  _proto.render = function render() {\n    if (!isPlainChildren(this.props)) {\n      var _this$state = this.state,\n          inView = _this$state.inView,\n          entry = _this$state.entry;\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        props = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n\n    return /*#__PURE__*/React.createElement(as || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(React.Component);\nInView.displayName = 'InView';\nInView.defaultProps = {\n  threshold: 0,\n  triggerOnce: false,\n  initialInView: false\n};\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      threshold = _ref.threshold,\n      delay = _ref.delay,\n      trackVisibility = _ref.trackVisibility,\n      rootMargin = _ref.rootMargin,\n      root = _ref.root,\n      triggerOnce = _ref.triggerOnce,\n      skip = _ref.skip,\n      initialInView = _ref.initialInView,\n      fallbackInView = _ref.fallbackInView;\n\n  var unobserve = React.useRef();\n\n  var _React$useState = React.useState({\n    inView: !!initialInView\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = React.useCallback(function (node) {\n    if (unobserve.current !== undefined) {\n      unobserve.current();\n      unobserve.current = undefined;\n    } // Skip creating the observer\n\n\n    if (skip) return;\n\n    if (node) {\n      unobserve.current = observe(node, function (inView, entry) {\n        setState({\n          inView: inView,\n          entry: entry\n        });\n\n        if (entry.isIntersecting && triggerOnce && unobserve.current) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve.current();\n          unobserve.current = undefined;\n        }\n      }, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: threshold,\n        // @ts-ignore\n        trackVisibility: trackVisibility,\n        // @ts-ignore\n        delay: delay\n      }, fallbackInView);\n    }\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, root, rootMargin, triggerOnce, skip, trackVisibility, fallbackInView, delay]);\n  /* eslint-disable-next-line */\n\n  useEffect(function () {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView\n      });\n    }\n  });\n  var result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport { InView, InView as default, defaultFallbackInView, observe, useInView };\n//# sourceMappingURL=react-intersection-observer.m.js.map\n","/* eslint-disable import/prefer-default-export */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport const SLIDER = 'Slider';\nexport const NEW_PRODUCTS = 'NewProducts';\nexport const CATALOG_PRODUCT_LIST = 'CatalogProductList';\nexport const RECENTLY_VIEWED = 'RecentlyViewed';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './WidgetFactory.component';\n","/* eslint-disable react/prop-types */\n/* eslint-disable max-len */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { lazy, PureComponent, Suspense } from 'react';\n\nimport RenderWhenVisible from 'Component/RenderWhenVisible';\n\nimport {\n    CATALOG_PRODUCT_LIST,\n    NEW_PRODUCTS,\n    RECENTLY_VIEWED,\n    SLIDER\n} from './WidgetFactory.config';\n\nimport './WidgetFactory.style';\n\nexport const ProductListWidget = lazy(() => import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"widget-product-list\" */\n    'Component/ProductListWidget'\n));\nexport const NewProducts = lazy(() => import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"widget-new-product\" */\n    'Component/NewProducts'\n));\nexport const HomeSlider = lazy(() => import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"widget-slider\" */\n    'Component/SliderWidget'\n));\nexport const RecentlyViewedWidget = lazy(() => import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"widget-recently-viewed\" */\n    'Component/RecentlyViewedWidget'\n));\n\n/** @namespace Component/WidgetFactory/Component */\nexport class WidgetFactory extends PureComponent {\n    static propTypes = {\n        type: PropTypes.string.isRequired\n    };\n\n    renderMap = {\n        [SLIDER]: {\n            component: HomeSlider,\n            fallback: this.renderSliderFallback\n        },\n        [NEW_PRODUCTS]: {\n            component: NewProducts\n        },\n        [CATALOG_PRODUCT_LIST]: {\n            component: ProductListWidget\n        },\n        [RECENTLY_VIEWED]: {\n            component: RecentlyViewedWidget\n        }\n    };\n\n    renderSliderFallback() {\n        return (\n            <div block=\"WidgetFactory\" elem=\"SliderPlaceholder\" />\n        );\n    }\n\n    renderDefaultFallback() {\n        return <div />;\n    }\n\n    renderContent() {\n        const {\n            type,\n            sliderId = null,\n            displayType,\n            productsCount,\n            showPager,\n            storeId,\n            title,\n            conditionsEncoded\n        } = this.props;\n        const {\n            component: Widget,\n            fallback\n        } = this.renderMap[type] || {};\n\n        if (Widget !== undefined) {\n            return (\n                <RenderWhenVisible fallback={ fallback }>\n                    <Widget\n                      sliderId={ sliderId }\n                      displayType={ displayType }\n                      productsCount={ productsCount }\n                      showPager={ showPager }\n                      storeId={ storeId }\n                      title={ title }\n                      conditionsEncoded={ conditionsEncoded }\n                    />\n                </RenderWhenVisible>\n            );\n        }\n\n        return null;\n    }\n\n    renderFallback() {\n        const { type } = this.props;\n        const { fallback = this.renderDefaultFallback } = this.renderMap[type] || {};\n\n        return fallback();\n    }\n\n    render() {\n        return (\n            <Suspense fallback={ this.renderFallback() }>\n                { this.renderContent() }\n            </Suspense>\n        );\n    }\n}\n\nexport default WidgetFactory;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\nimport 'intersection-observer';\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { InView } from 'react-intersection-observer';\n\nimport { ChildrenType } from 'Type/Common.type';\nimport { isCrawler, isSSR } from 'Util/Browser';\nimport { noopFn } from 'Util/Common';\n\nimport './RenderWhenVisible.style';\n\n/** @namespace Component/RenderWhenVisible/Component */\nexport class RenderWhenVisible extends PureComponent {\n    static propTypes = {\n        children: ChildrenType.isRequired,\n        fallback: PropTypes.func\n    };\n\n    static defaultProps = {\n        fallback: noopFn\n    };\n\n    state = {\n        wasVisible: false\n    };\n\n    handleVisibilityToggle = this.handleVisibilityToggle.bind(this);\n\n    __construct(props) {\n        super.__construct(props);\n\n        // a hack to determine if the element is on screen or not immediately\n        setTimeout(this.checkIsVisible, 0);\n    }\n\n    checkIsVisible() {\n        if (!this.node) {\n            return;\n        }\n\n        const rect = this.node.getBoundingClientRect();\n        const viewHeight = Math.max(document.documentElement.clientHeight, window.innerHeight);\n\n        if (!(rect.bottom < 0 || rect.top - viewHeight >= 0)) {\n            this.setState({ wasVisible: true });\n        }\n    }\n\n    shouldRender() {\n        const { wasVisible } = this.state;\n\n        return !wasVisible && !isSSR() && !isCrawler();\n    }\n\n    handleVisibilityToggle(isVisible) {\n        const { wasVisible } = this.state;\n\n        if (!wasVisible && isVisible) {\n            this.setState({ wasVisible: true });\n        }\n    }\n\n    renderFallback() {\n        const { fallback } = this.props;\n        const fallbackRender = fallback();\n\n        if (fallbackRender) {\n            return fallbackRender;\n        }\n\n        return (\n            <div block=\"RenderWhenVisible\" elem=\"Detector\" />\n        );\n    }\n\n    renderVisibilitySensor() {\n        return (\n            <InView onChange={ this.handleVisibilityToggle }>\n                { this.renderFallback() }\n            </InView>\n        );\n    }\n\n    renderChildren() {\n        const { children } = this.props;\n\n        return children;\n    }\n\n    renderContent() {\n        if (this.shouldRender()) {\n            return this.renderVisibilitySensor();\n        }\n\n        return this.renderChildren();\n    }\n\n    render() {\n        return (\n            <div\n              block=\"RenderWhenVisible\"\n              ref={ (node) => {\n                  this.node = node;\n              } }\n            >\n                { this.renderContent() }\n            </div>\n        );\n    }\n}\n\nexport default RenderWhenVisible;\n"],"sourceRoot":""}