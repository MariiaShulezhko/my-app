{"version":3,"sources":["../node_modules/@scandipwa/scandipwa/src/component/ProductAttributes/index.js","../node_modules/@scandipwa/scandipwa/src/component/ProductAttributes/ProductAttributes.component.js","../node_modules/@scandipwa/scandipwa/src/component/ProductAttributes/ProductAttributes.container.js"],"names":["attributesWithValues","this","props","Object","values","map","attribute","attribute_group_id","attribute_group_name","filter","group","index","array","findIndex","g","block","elem","key","renderAttributes","attribute_label","isFormattedAsText","keys","length","filteredAttributesWithValues","renderAttribute","bind","heading","areDetailsLoaded","__","mix","renderGroups","renderContent","PureComponent","ProductAttributes","product","getAttributesWithValues","containerProps","ProductAttributesContainer"],"mappings":"0GAAA,+D,mJCqBO,iIAAP,OAAO,yCAMH,WAAgB,IAAD,OACHA,EAAyBC,KAAKC,MAA9BF,qBAeR,OAbeG,OAAOC,OAAOJ,GAAsBK,KAC/C,SAACC,GAAD,MAAgB,CACZC,mBAAoBD,EAAUC,mBAC9BC,qBAAsBF,EAAUE,yBAIZC,QACxB,SAACC,EAAOC,EAAOC,GAAf,OACID,IAAUC,EAAMC,WAAU,SAACC,GAAD,OAAOA,EAAEP,qBAAuBG,EAAMH,yBAKvDF,KACT,SAACK,GAAD,kBACSK,MAAM,oBAAoBC,KAAK,iBAAiBC,IAAMP,EAAMF,sBADrE,UAEYO,MAAM,oBAAoBC,KAAK,SAC7BN,EAAMF,sBAEV,EAAKU,iBAAiBR,EAAMH,0BA7BtD,6BAoCI,SAAgBD,GACZ,WACK,WADL,CACcW,IAAMX,EAAUa,iBAD9B,UAEYJ,MAAM,oBAAoBC,KAAK,kBAC7BV,EAAUa,iBAHxB,UAKYJ,MAAM,oBAAoBC,KAAK,cAL3C,IAMa,IANb,CAOcC,IAAMX,EAAUa,gBAChBb,UAAYA,EACZc,mBAAiB,QA9CvC,8BAqDI,SAAiBb,GACb,IAAQP,EAAyBC,KAAKC,MAA9BF,qBAER,IAAKG,OAAOkB,KAAKrB,GAAsBsB,OACnC,OAAO,KAGX,IAAMC,EAA+BpB,OAAOC,OAAOJ,GAAsBS,QACrE,SAACH,GAAD,OAAeA,EAAUC,qBAAuBA,KAGpD,OAAKgB,EAA6BD,OAIlC,UACQP,MAAM,oBAAoBC,KAAK,cAC7BO,EAA6BlB,IAAIJ,KAAKuB,gBAAgBC,KAAKxB,QAL1D,OAjEnB,2BA2EI,WACI,IACMyB,EADuBzB,KAAKC,MAA1ByB,iBAC2BC,EAAG,WAAa,GAEnD,WACK,UADL,CAGMF,QAAUA,EACVG,IAAM,CAAEd,MAAO,oBAAqBC,KAAM,YAElCf,KAAK6B,kBArF3B,oBA0FI,WAKI,OAFI7B,KAAKC,MADLyB,iBAOG1B,KAAK8B,gBAHD,SAhGnB,EAAO,CAAP,aAAuCC,kBAAvC,yCAuGeC,Q,oLCxGR,iIAAP,OAAO,2CAMH,WACI,MAAsChC,KAAKC,MAAnCyB,EAAR,EAAQA,iBAAkBO,EAA1B,EAA0BA,QAE1B,MAAO,CACHP,mBACA3B,qBAAsBmC,YAAwBD,MAX1D,oBAeI,WACI,WACK,IACMjC,KAAKmC,sBAlBxB,EAAO,CAAP,aAAgDJ,kBAAhD,yCAwBeK,Q","file":"static/js/product-attributes.393ed494.chunk.js","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './ProductAttributes.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { Fragment, PureComponent } from 'react';\n\nimport ExpandableContent from 'Component/ExpandableContent';\nimport ProductAttributeValue from 'Component/ProductAttributeValue';\nimport { AttributeType } from 'Type/ProductList.type';\n\nimport './ProductAttributes.style';\n\n/** @namespace Component/ProductAttributes/Component */\nexport class ProductAttributes extends PureComponent {\n    static propTypes = {\n        areDetailsLoaded: PropTypes.bool.isRequired,\n        attributesWithValues: AttributeType.isRequired\n    };\n\n    renderGroups() {\n        const { attributesWithValues } = this.props;\n\n        const groups = Object.values(attributesWithValues).map(\n            (attribute) => ({\n                attribute_group_id: attribute.attribute_group_id,\n                attribute_group_name: attribute.attribute_group_name\n            })\n        );\n\n        const uniqueGroups = groups.filter(\n            (group, index, array) => (\n                index === array.findIndex((g) => g.attribute_group_id === group.attribute_group_id)\n            )\n        );\n\n        return (\n            uniqueGroups.map(\n                (group) => (\n                    <div block=\"ProductAttributes\" elem=\"AttributeBlock\" key={ group.attribute_group_name }>\n                        <h2 block=\"ProductAttributes\" elem=\"Group\">\n                            { group.attribute_group_name }\n                        </h2>\n                        { this.renderAttributes(group.attribute_group_id) }\n                    </div>\n                )\n            )\n        );\n    }\n\n    renderAttribute(attribute) {\n        return (\n            <Fragment key={ attribute.attribute_label }>\n                <dt block=\"ProductAttributes\" elem=\"AttributeLabel\">\n                    { attribute.attribute_label }\n                </dt>\n                <dd block=\"ProductAttributes\" elem=\"ValueLabel\">\n                    <ProductAttributeValue\n                      key={ attribute.attribute_label }\n                      attribute={ attribute }\n                      isFormattedAsText\n                    />\n                </dd>\n            </Fragment>\n        );\n    }\n\n    renderAttributes(attribute_group_id) {\n        const { attributesWithValues } = this.props;\n\n        if (!Object.keys(attributesWithValues).length) {\n            return null;\n        }\n\n        const filteredAttributesWithValues = Object.values(attributesWithValues).filter(\n            (attribute) => attribute.attribute_group_id === attribute_group_id\n        );\n\n        if (!filteredAttributesWithValues.length) {\n            return null;\n        }\n\n        return (\n            <dl block=\"ProductAttributes\" elem=\"Attributes\">\n                { filteredAttributesWithValues.map(this.renderAttribute.bind(this)) }\n            </dl>\n        );\n    }\n\n    renderContent() {\n        const { areDetailsLoaded } = this.props;\n        const heading = areDetailsLoaded ? __('Details') : '';\n\n        return (\n            <ExpandableContent\n              // show placeholder if the details are not loaded\n              heading={ heading }\n              mix={ { block: 'ProductAttributes', elem: 'Content' } }\n            >\n                    { this.renderGroups() }\n            </ExpandableContent>\n        );\n    }\n\n    render() {\n        const {\n            areDetailsLoaded\n        } = this.props;\n\n        if (!areDetailsLoaded) {\n            return null;\n        }\n\n        return this.renderContent();\n    }\n}\n\nexport default ProductAttributes;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { ProductType } from 'Type/ProductList.type';\nimport { getAttributesWithValues } from 'Util/Product';\n\nimport ProductAttributes from './ProductAttributes.component';\n\n/** @namespace Component/ProductAttributes/Container */\nexport class ProductAttributesContainer extends PureComponent {\n    static propTypes = {\n        product: ProductType.isRequired,\n        areDetailsLoaded: PropTypes.bool.isRequired\n    };\n\n    containerProps() {\n        const { areDetailsLoaded, product } = this.props;\n\n        return {\n            areDetailsLoaded,\n            attributesWithValues: getAttributesWithValues(product)\n        };\n    }\n\n    render() {\n        return (\n            <ProductAttributes\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default ProductAttributesContainer;\n"],"sourceRoot":""}