{"version":3,"file":"static/js/account-address.chunk.js","sources":["/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CloseIcon/CloseIcon.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CloseIcon/index.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressBook/MyAccountAddressBook.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressBook/MyAccountAddressBook.container.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressBook/index.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressForm/MyAccountAddressForm.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressForm/MyAccountAddressForm.config.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressForm/MyAccountAddressForm.container.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressForm/MyAccountAddressForm.form.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressForm/index.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressPopup/MyAccountAddressPopup.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressPopup/MyAccountAddressPopup.container.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressPopup/index.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Notification/Notification.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Notification/Notification.config.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Notification/index.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/NotificationList/NotificationList.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/NotificationList/NotificationList.container.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/NotificationList/index.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Popup/Popup.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Popup/Popup.config.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Popup/Popup.container.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Popup/index.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/store/Notification/Notification.reducer.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/type/NotificationList.type.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/util/Store/Transform.js"],"sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport { PureComponent } from 'react';\n\nimport './CloseIcon.style';\n\n/** @namespace Component/CloseIcon/Component */\nexport class CloseIcon extends PureComponent {\n    render() {\n        return (\n            <svg\n              block=\"CloseIcon\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path d=\"M16.192 6.34399L11.949 10.586L7.707 6.34399L6.293 7.75799L10.535 12L6.293 16.242L7.707 17.656L11.949 13.414L16.192 17.656L17.606 16.242L13.364 12L17.606 7.75799L16.192 6.34399Z\" />\n            </svg>\n        );\n    }\n}\n\nexport default CloseIcon;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './CloseIcon.component';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\n\nimport MyAccountAddressPopup from 'Component/MyAccountAddressPopup';\nimport MyAccountAddressTable from 'Component/MyAccountAddressTable';\nimport { CustomerType } from 'Type/Account.type';\nimport { getDefaultAddressLabel } from 'Util/Address';\n\nimport './MyAccountAddressBook.style';\n\n/** @namespace Component/MyAccountAddressBook/Component */\nexport class MyAccountAddressBook extends Component {\n    static propTypes = {\n        customer: CustomerType.isRequired,\n        showCreateNewPopup: PropTypes.func.isRequired\n    };\n\n    shouldComponentUpdate(nextProps) {\n        const { customer } = this.props;\n        const { customer: nextCustomer } = nextProps;\n\n        return customer !== nextCustomer;\n    }\n\n    renderPopup() {\n        return <MyAccountAddressPopup />;\n    }\n\n    renderAddress(address, index) {\n        const addressNumber = index + 1;\n        const postfix = getDefaultAddressLabel(address);\n\n        return (\n            <MyAccountAddressTable\n              title={ __('Address #%s%s', addressNumber, postfix) }\n              showActions\n              address={ address }\n              key={ addressNumber }\n            />\n        );\n    }\n\n    renderNoAddresses() {\n        return (\n            <div>\n                <p>{ __('You have no configured addresses.') }</p>\n            </div>\n        );\n    }\n\n    renderActions() {\n        const { showCreateNewPopup } = this.props;\n\n        return (\n            <button\n              block=\"Button\"\n              mix={ { block: 'MyAccountAddressBook', elem: 'Button' } }\n              mods={ { isHollow: true } }\n              onClick={ showCreateNewPopup }\n            >\n                { __('Add new address') }\n            </button>\n        );\n    }\n\n    renderAddressList() {\n        const { customer: { addresses = [] } } = this.props;\n\n        if (!addresses.length) {\n            return this.renderNoAddresses();\n        }\n\n        return addresses.map(this.renderAddress);\n    }\n\n    render() {\n        return (\n            <div block=\"MyAccountAddressBook\">\n                { this.renderActions() }\n                { this.renderAddressList() }\n                { this.renderPopup() }\n            </div>\n        );\n    }\n}\n\nexport default MyAccountAddressBook;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { ADD_ADDRESS, ADDRESS_POPUP_ID } from 'Component/MyAccountAddressPopup/MyAccountAddressPopup.config';\nimport { showPopup } from 'Store/Popup/Popup.action';\nimport { ADDRESS_BOOK, CustomerType, TabMapType } from 'Type/Account.type';\n\nimport MyAccountAddressBook from './MyAccountAddressBook.component';\n\n/** @namespace Component/MyAccountAddressBook/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    customer: state.MyAccountReducer.customer\n});\n\n/** @namespace Component/MyAccountAddressBook/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showPopup: (payload) => dispatch(showPopup(ADDRESS_POPUP_ID, payload))\n});\n\n/** @namespace Component/MyAccountAddressBook/Container */\nexport class MyAccountAddressBookContainer extends PureComponent {\n    static propTypes = {\n        customer: CustomerType.isRequired,\n        showPopup: PropTypes.func.isRequired,\n        changeTabName: PropTypes.func.isRequired,\n        tabMap: TabMapType.isRequired\n    };\n\n    containerFunctions = {\n        showCreateNewPopup: this.showCreateNewPopup.bind(this)\n    };\n\n    componentDidMount() {\n        const { changeTabName, tabMap } = this.props;\n        const { tabName } = tabMap[ADDRESS_BOOK];\n\n        changeTabName(tabName);\n    }\n\n    containerProps() {\n        const { customer, showPopup } = this.props;\n\n        return { customer, showPopup };\n    }\n\n    showCreateNewPopup() {\n        const { showPopup } = this.props;\n\n        showPopup({\n            action: ADD_ADDRESS,\n            title: __('Add new address'),\n            address: {}\n        });\n    }\n\n    render() {\n        return (\n            <MyAccountAddressBook\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountAddressBookContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './MyAccountAddressBook.container';\n","/* eslint-disable spaced-comment */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\n\nimport FIELD_TYPE from 'Component/Field/Field.config';\nimport FieldForm from 'Component/FieldForm';\nimport { Addresstype } from 'Type/Account.type';\nimport { CountriesType } from 'Type/Config.type';\nimport {\n    trimCustomerAddress\n} from 'Util/Address';\nimport transformToNameValuePair from 'Util/Form/Transform';\n\nimport myAccountAddressForm from './MyAccountAddressForm.form';\n\n/** @namespace Component/MyAccountAddressForm/Component */\nexport class MyAccountAddressForm extends FieldForm {\n    static propTypes = {\n        address: Addresstype.isRequired,\n        countries: CountriesType.isRequired,\n        defaultCountry: PropTypes.string.isRequired,\n        addressLinesQty: PropTypes.number.isRequired,\n        showVatNumber: PropTypes.bool.isRequired,\n        regionDisplayAll: PropTypes.bool.isRequired,\n        onCountryChange: PropTypes.func.isRequired,\n        onZipcodeChange: PropTypes.func.isRequired,\n        onCityChange: PropTypes.func.isRequired,\n        onRegionChange: PropTypes.func.isRequired,\n        onRegionIdChange: PropTypes.func.isRequired,\n        countryId: PropTypes.string.isRequired,\n        isStateRequired: PropTypes.bool,\n        currentCity: PropTypes.string,\n        currentRegion: PropTypes.string,\n        currentZipcode: PropTypes.string,\n        currentRegionId: PropTypes.number\n    };\n\n    static defaultProps = {\n        currentZipcode: null,\n        currentCity: null,\n        currentRegion: null,\n        currentRegionId: null,\n        isStateRequired: false\n    };\n\n    //#region GETTERS\n    get fieldMap() {\n        const {\n            address,\n            countries,\n            addressLinesQty,\n            regionDisplayAll,\n            showVatNumber,\n            defaultCountry,\n            availableRegions,\n            isStateRequired,\n            countryId,\n            currentRegion,\n            currentCity,\n            currentRegionId,\n            currentZipcode,\n            onCountryChange,\n            onZipcodeChange,\n            onCityChange,\n            onRegionChange,\n            onRegionIdChange\n        } = this.props;\n\n        return myAccountAddressForm({\n            address,\n            countries,\n            addressLinesQty,\n            regionDisplayAll,\n            showVatNumber,\n            defaultCountry,\n            availableRegions,\n            isStateRequired,\n            countryId,\n            currentRegion,\n            currentCity,\n            currentRegionId,\n            currentZipcode,\n            ...address\n        }, {\n            onCountryChange,\n            onZipcodeChange,\n            onCityChange,\n            onRegionChange,\n            onRegionIdChange\n        });\n    }\n\n    getFormProps() {\n        return {\n            onSubmit: this.onSubmit.bind(this)\n        };\n    }\n\n    /**\n     * Creates / Updates address from entered data\n     * @param form\n     * @param fields\n     */\n    onSubmit(form, fields) {\n        const { onSave, addressLinesQty } = this.props;\n        const newAddress = transformToNameValuePair(fields);\n\n        // Joins streets into one variable\n        if (addressLinesQty > 1) {\n            newAddress.street = [];\n            // eslint-disable-next-line fp/no-loops,fp/no-let\n            for (let i = 0; i < addressLinesQty; i++) {\n                if (newAddress[`street_${i}`]) {\n                    newAddress.street.push(newAddress[`street_${i}`]);\n                }\n            }\n        }\n\n        // Fixes region variable format\n        const { region_id = 0, region_string: region } = newAddress;\n\n        newAddress.region = { region_id: +region_id, region };\n\n        // Filters out non-required options and save address\n        onSave(trimCustomerAddress(newAddress));\n    }\n\n    //#region RENDERERS\n    renderActions() {\n        return (\n            <button\n              type={ FIELD_TYPE.submit }\n              block=\"Button\"\n              mix={ { block: 'MyAccount', elem: 'Button' } }\n              mods={ { isHollow: true } }\n            >\n                { __('Save address') }\n            </button>\n        );\n    }\n    //#endregion\n}\n\nexport default MyAccountAddressForm;\n","/* eslint-disable import/prefer-default-export */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport const UPDATE_ZIPCODE_FREQUENCY = 500;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Addresstype } from 'Type/Account.type';\nimport { CountriesType } from 'Type/Config.type';\nimport {\n    getAvailableRegions,\n    getCityAndRegionFromZipcode,\n    getRegionIdFromAvailableRegions\n} from 'Util/Address';\nimport { debounce } from 'Util/Request';\nimport transformCountriesToOptions from 'Util/Store/Transform';\n\nimport MyAccountAddressForm from './MyAccountAddressForm.component';\nimport { UPDATE_ZIPCODE_FREQUENCY } from './MyAccountAddressForm.config';\n\n/** @namespace Component/MyAccountAddressForm/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    countries: transformCountriesToOptions(state.ConfigReducer.countries || []),\n    defaultCountry: state.ConfigReducer.default_country,\n    addressLinesQty: state.ConfigReducer.address_lines_quantity,\n    showVatNumber: state.ConfigReducer.show_vat_number_on_storefront,\n    regionDisplayAll: state.ConfigReducer.region_display_all\n});\n\n/** @namespace Component/MyAccountAddressForm/Container/mapDispatchToProps */\nexport const mapDispatchToProps = () => ({});\n\n/** @namespace Component/MyAccountAddressForm/Container */\nexport class MyAccountAddressFormContainer extends PureComponent {\n    static propTypes = {\n        address: Addresstype.isRequired,\n        countries: CountriesType.isRequired,\n        defaultCountry: PropTypes.string,\n        addressLinesQty: PropTypes.number.isRequired,\n        showVatNumber: PropTypes.bool.isRequired,\n        regionDisplayAll: PropTypes.bool.isRequired,\n        onSave: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        defaultCountry: 'US'\n    };\n\n    state = {\n        countryId: this.getCountry()?.value || 'US',\n        availableRegions: this.getAvailableRegions() || [],\n        isStateRequired: !!this.getCountry()?.is_state_required,\n        currentCity: this.getCurrentAddress().city,\n        currentRegion: this.getCurrentAddress().region,\n        currentZipcode: this.getCurrentAddress().postcode,\n        currentRegionId: this.getCurrentAddress().regionId\n    };\n\n    containerFunctions = {\n        onCountryChange: this.onCountryChange.bind(this),\n        onZipcodeChange: this.onZipcodeChange.bind(this),\n        onCityChange: this.onCityChange.bind(this),\n        onRegionChange: this.onRegionChange.bind(this),\n        onRegionIdChange: this.onRegionIdChange.bind(this)\n    };\n\n    containerProps() {\n        const {\n            address,\n            countries,\n            defaultCountry,\n            addressLinesQty,\n            showVatNumber,\n            regionDisplayAll,\n            onSave\n        } = this.props;\n        const {\n            countryId,\n            availableRegions,\n            isStateRequired,\n            currentCity,\n            currentRegion,\n            currentZipcode,\n            currentRegionId\n        } = this.state;\n\n        return {\n            address,\n            countries,\n            defaultCountry,\n            addressLinesQty,\n            showVatNumber,\n            regionDisplayAll,\n            countryId,\n            availableRegions,\n            isStateRequired,\n            onSave,\n            currentCity,\n            currentRegion,\n            currentZipcode,\n            currentRegionId\n        };\n    }\n\n    // #region GETTERS\n    getCountry(countryId = null) {\n        const { countries, defaultCountry, address: { country_id: countryIdAddress } = {} } = this.props;\n        const countryIdFixed = countryId || countryIdAddress || defaultCountry;\n\n        return countries.find(({ value }) => value === countryIdFixed);\n    }\n\n    getCurrentAddress() {\n        const { address, address: { id: addressId } } = this.props;\n\n        if (!addressId) {\n            return {\n                region: '',\n                regionId: 1,\n                zipCode: '',\n                city: ''\n            };\n        }\n\n        const { region: { region, region_id: regionId }, postcode, city } = address;\n\n        return {\n            region,\n            regionId,\n            postcode,\n            city\n        };\n    }\n\n    /**\n     * Returns available regions based on country and zip\n     * @param countryId\n     * @param zipCode\n     * @returns {Promise<[*, *]|null[]|*>}\n     */\n    getAvailableRegions(countryId = null, zipCode = null) {\n        const { countries, defaultCountry } = this.props;\n        const { value: currCountryId = defaultCountry } = this.getCountry(countryId) || {};\n\n        return !zipCode\n            ? getAvailableRegions(currCountryId, countries)\n            : this.handleSetCityAndRegionDependingOnZipcode(countryId, zipCode);\n    }\n    // #endregion\n\n    // #region EVENTS\n    onCityChange(field) {\n        this.setState({ currentCity: field.target.value });\n    }\n\n    onRegionChange(field) {\n        this.setState({ currentRegion: field.target.value });\n    }\n\n    onRegionIdChange(field) {\n        this.setState({ currentRegionId: field });\n    }\n\n    onCountryChange(field, e) {\n        // Handles auto fill\n        const fieldValue = typeof field === 'object' ? e.value : field;\n\n        const { currentZipcode } = this.state;\n        const { countries } = this.props;\n        const country = countries.find(({ value }) => value === fieldValue);\n\n        if (!country) {\n            this.setState({\n                currentRegion: '',\n                currentRegionId: 1,\n                countryId: '',\n                availableRegions: []\n            });\n\n            return;\n        }\n\n        const {\n            available_regions: availableRegions = [],\n            is_state_required: isStateRequired = true,\n            value: countryId\n        } = country;\n\n        this.getAvailableRegions(countryId, currentZipcode);\n        this.setState({\n            availableRegions,\n            isStateRequired: isStateRequired || false,\n            countryId,\n            currentRegionId: 1,\n            currentRegion: ''\n        });\n    }\n\n    onZipcodeChange(event, field) {\n        const { value: zipCode = '' } = field || {};\n        const { countryId } = this.state;\n\n        this.setState({ currentZipcode: zipCode });\n        debounce(this.getAvailableRegions(countryId, zipCode), UPDATE_ZIPCODE_FREQUENCY);\n    }\n\n    async handleSetCityAndRegionDependingOnZipcode(countryId, zipCode) {\n        const { availableRegions = [] } = this.state;\n        const cityAndRegion = await getCityAndRegionFromZipcode(countryId, zipCode);\n\n        if (!cityAndRegion) {\n            return;\n        }\n\n        const { city, region } = cityAndRegion;\n\n        if (availableRegions && availableRegions.length) {\n            this.setState({\n                currentCity: city,\n                currentRegionId: getRegionIdFromAvailableRegions(availableRegions, cityAndRegion),\n                currentRegion: ''\n            });\n        } else {\n            this.setState({\n                currentCity: city,\n                currentRegion: region,\n                currentRegionId: 1\n            });\n        }\n    }\n    // #endregion\n\n    render() {\n        return (\n            <MyAccountAddressForm\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountAddressFormContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport FIELD_TYPE from 'Component/Field/Field.config';\nimport { VALIDATION_INPUT_TYPE } from 'Util/Validator/Config';\n\n/**\n * Returns fields for street\n * @param props\n * @returns {[{addRequiredTag: boolean, validateOn: string[], validationRule: {isRequired: boolean}, label: *, type: string, attr: {defaultValue: (*|string), name: string, placeholder: *}}]|*[]}\n * @namespace Component/MyAccountAddressForm/Form/getStreetFields */\nexport const getStreetFields = (props) => {\n    const {\n        addressLinesQty = 1,\n        address: { street = [] }\n    } = props;\n\n    if (addressLinesQty === 1) {\n        return [{\n            type: FIELD_TYPE.text,\n            label: __('Street address'),\n            attr: {\n                name: 'street',\n                defaultValue: street[0] || '',\n                placeholder: __('Your street address')\n            },\n            addRequiredTag: true,\n            validateOn: ['onChange'],\n            validationRule: {\n                isRequired: true\n            }\n        }];\n    }\n\n    const streets = [];\n\n    // eslint-disable-next-line fp/no-loops, fp/no-let\n    for (let i = 0; i < addressLinesQty; i++) {\n        streets.push({\n            type: FIELD_TYPE.text,\n            label: __('Street address line %s', i + 1),\n            attr: {\n                name: `street_${i}`,\n                defaultValue: street[i] || '',\n                placeholder: __('Your street address line %s', i + 1)\n            },\n            addRequiredTag: i === 0,\n            validateOn: i === 0 ? ['onChange'] : [],\n            validationRule: {\n                isRequired: i === 0\n            }\n        });\n    }\n\n    return streets;\n};\n\n/**\n * Returns region fields\n * @param props\n * @param events\n * @returns {[{addRequiredTag: boolean, validateOn: (string[]|*[]), validationRule: {isRequired}, options, label: *, type: string, attr: {defaultValue: number, name: string, selectPlaceholder: *}}]|*[]|[{validateOn: (string[]|*[]), validationRule: {isRequired}, label: *, type: string, attr: {defaultValue, name: string, id: string, placeholder: *}}]}\n * @namespace Component/MyAccountAddressForm/Form/getRegionFields\n */\nexport const getRegionFields = (props, events) => {\n    const {\n        currentRegion,\n        currentRegionId,\n        regionDisplayAll,\n        availableRegions,\n        isStateRequired\n    } = props;\n\n    const { onRegionChange, onRegionIdChange } = events;\n\n    if (!regionDisplayAll && !isStateRequired) {\n        return [];\n    }\n\n    if (!availableRegions || !availableRegions.length) {\n        return [\n            {\n                type: FIELD_TYPE.text,\n                label: __('State / Province'),\n                attr: {\n                    id: 'address-region-id',\n                    name: 'region_string',\n                    value: currentRegion,\n                    placeholder: __('Your state / province')\n                },\n                events: {\n                    onChange: onRegionChange\n                },\n                addRequiredTag: isStateRequired,\n                validateOn: isStateRequired ? ['onChange'] : [],\n                validationRule: {\n                    isRequired: isStateRequired\n                }\n            }\n        ];\n    }\n\n    return [\n        {\n            type: FIELD_TYPE.select,\n            label: __('State / Province'),\n            attr: {\n                name: 'region_id',\n                value: currentRegionId,\n                selectPlaceholder: __('Select region...')\n            },\n            events: {\n                onChange: onRegionIdChange\n            },\n            options: availableRegions.map(({ id, name }) => ({ id, label: name, value: id })),\n            addRequiredTag: isStateRequired,\n            validateOn: isStateRequired ? ['onChange'] : [],\n            validationRule: {\n                isRequired: isStateRequired\n            }\n        }\n    ];\n};\n\n/**\n * Returns VAT fields\n * @param props\n * @returns {*[]|[{label: *, type: string, attr: {defaultValue: string, name: string}}]}\n * @namespace Component/MyAccountAddressForm/Form/getVatFields */\nexport const getVatFields = (props) => {\n    const { showVatNumber, vat_id: vatID = '' } = props;\n\n    if (!showVatNumber) {\n        return [];\n    }\n\n    return [\n        {\n            type: FIELD_TYPE.text,\n            label: __('VAT Number'),\n            attr: {\n                placeholder: __('Your VAT number'),\n                name: 'vat_id',\n                defaultValue: vatID\n            },\n            addRequiredTag: false,\n            validateOn: ['onChange'],\n            validationRule: {\n                isRequired: false\n            }\n        }\n    ];\n};\n\n/**\n * Returns address form fields\n * @param props\n * @param events\n * @returns {[{label: *, type: string, attr: {defaultChecked, name: string}}, {label: *, type: string, attr: {defaultChecked, name: string}}, {addRequiredTag: boolean, validateOn: string[], validationRule: {isRequired: boolean}, label: *, type: string, attr: {defaultValue: string, name: string, placeholder: *}}, {addRequiredTag: boolean, validateOn: string[], validationRule: {isRequired: boolean}, label: *, type: string, attr: {defaultValue: string, name: string, placeholder: *}}, {mods: {street: boolean, multipleFields: boolean, oddAddresses: boolean}, name: string, fields: ({addRequiredTag: boolean, validateOn: string[], validationRule: {isRequired: boolean}, label: *, type: string, attr: {defaultValue: (*|string), name: string, placeholder: *}}[]|*[])}, null, ...*[]|{label: *, type: string, attr: {defaultValue: string, name: string}}[], null]}\n * @namespace Component/MyAccountAddressForm/Form/myAccountAddressForm */\nexport const myAccountAddressForm = (props, events = {}) => {\n    const {\n        default_billing: defaultBilling,\n        default_shipping: defaultShipping,\n        countryId,\n        firstname = '',\n        lastname = '',\n        city = '',\n        countries = [],\n        postcode: zipcode = '',\n        telephone = '',\n        addressLinesQty = 1\n    } = props;\n\n    const {\n        onCountryChange,\n        onZipcodeChange,\n        onCityChange\n    } = events || {};\n\n    return [\n        {\n            type: FIELD_TYPE.checkbox,\n            label: __('This is default Billing Address'),\n            attr: {\n                name: 'default_billing',\n                defaultChecked: defaultBilling\n            }\n        },\n        {\n            type: FIELD_TYPE.checkbox,\n            label: __('This is default Shipping Address'),\n            attr: {\n                name: 'default_shipping',\n                defaultChecked: defaultShipping\n            }\n        },\n        {\n            type: FIELD_TYPE.text,\n            label: __('First name'),\n            attr: {\n                name: 'firstname',\n                defaultValue: firstname,\n                placeholder: __('Your first name')\n            },\n            addRequiredTag: true,\n            validateOn: ['onChange'],\n            validationRule: {\n                isRequired: true\n            }\n        },\n        {\n            type: FIELD_TYPE.text,\n            label: __('Last name'),\n            attr: {\n                name: 'lastname',\n                defaultValue: lastname,\n                placeholder: __('Your last name')\n            },\n            addRequiredTag: true,\n            validateOn: ['onChange'],\n            validationRule: {\n                isRequired: true\n            }\n        },\n        {\n            name: 'streetGroup',\n            mods: {\n                street: true,\n                multipleFields: addressLinesQty > 0,\n                oddAddresses: addressLinesQty % 2 === 1\n            },\n            fields: getStreetFields(props)\n        },\n        {\n            name: 'addressGroup',\n            mods: { address: true },\n            fields: [\n                {\n                    type: FIELD_TYPE.select,\n                    label: __('Country'),\n                    attr: {\n                        id: 'address-country-id',\n                        name: 'country_id',\n                        defaultValue: countryId,\n                        selectPlaceholder: __('Select country...')\n                    },\n                    events: {\n                        onChange: onCountryChange\n                    },\n                    options: countries,\n                    addRequiredTag: true,\n                    validateOn: ['onChange'],\n                    validationRule: {\n                        isRequired: true\n                    }\n                },\n                ...getRegionFields(props, events),\n                {\n                    type: FIELD_TYPE.text,\n                    label: __('Zip / Postal code'),\n                    attr: {\n                        name: 'postcode',\n                        defaultValue: zipcode,\n                        placeholder: __('Your zip / postal code')\n                    },\n                    events: {\n                        onChange: onZipcodeChange\n                    },\n                    addRequiredTag: true,\n                    validateOn: ['onChange', 'onBlur'],\n                    validationRule: {\n                        isRequired: true\n                    }\n                },\n                {\n                    type: FIELD_TYPE.text,\n                    label: __('City'),\n                    attr: {\n                        name: 'city',\n                        defaultValue: city,\n                        placeholder: __('Your city')\n                    },\n                    events: {\n                        onChange: onCityChange\n                    },\n                    addRequiredTag: true,\n                    validateOn: ['onChange'],\n                    validationRule: {\n                        isRequired: true\n                    }\n                }\n            ]\n        },\n        ...getVatFields(props),\n        {\n            type: FIELD_TYPE.tel,\n            label: __('Phone number'),\n            attr: {\n                name: 'telephone',\n                defaultValue: telephone,\n                placeholder: __('Your phone number')\n            },\n            addRequiredTag: true,\n            validateOn: ['onChange'],\n            validationRule: {\n                inputType: VALIDATION_INPUT_TYPE.phone,\n                isRequired: true\n            }\n        }\n    ];\n};\n\nexport default myAccountAddressForm;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './MyAccountAddressForm.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Loader from 'Component/Loader';\nimport MyAccountAddressForm from 'Component/MyAccountAddressForm';\nimport MyAccountAddressTable from 'Component/MyAccountAddressTable';\nimport Popup from 'Component/Popup';\nimport { Addresstype } from 'Type/Account.type';\n\nimport {\n    ADD_ADDRESS, ADDRESS_POPUP_ID, DELETE_ADDRESS, EDIT_ADDRESS\n} from './MyAccountAddressPopup.config';\n\nimport './MyAccountAddressPopup.style';\n\n/** @namespace Component/MyAccountAddressPopup/Component */\nexport class MyAccountAddressPopup extends PureComponent {\n    static propTypes = {\n        isLoading: PropTypes.bool.isRequired,\n        handleAddress: PropTypes.func.isRequired,\n        handleDeleteAddress: PropTypes.func.isRequired,\n        payload: PropTypes.shape({\n            action: PropTypes.oneOf([\n                EDIT_ADDRESS,\n                DELETE_ADDRESS,\n                ADD_ADDRESS\n            ]),\n            address: Addresstype\n        }).isRequired\n    };\n\n    renderAddressForm() {\n        const { payload: { address }, handleAddress } = this.props;\n\n        return (\n            <MyAccountAddressForm\n              address={ address }\n              onSave={ handleAddress }\n            />\n        );\n    }\n\n    renderDeleteNotice() {\n        const { payload: { address }, handleDeleteAddress } = this.props;\n\n        return (\n            <>\n                <p>{ __('Are you sure you want to delete this address?') }</p>\n                <div block=\"MyAccountAddressPopup\" elem=\"Address\">\n                    <MyAccountAddressTable address={ address } title={ __('Address details') } />\n                </div>\n                <button block=\"Button\" onClick={ handleDeleteAddress }>\n                    { __('Yes, delete address') }\n                </button>\n            </>\n        );\n    }\n\n    renderContent() {\n        const { payload: { action } } = this.props;\n\n        switch (action) {\n        case EDIT_ADDRESS:\n        case ADD_ADDRESS:\n            return this.renderAddressForm();\n        case DELETE_ADDRESS:\n            return this.renderDeleteNotice();\n        default:\n            return null;\n        }\n    }\n\n    render() {\n        const { isLoading } = this.props;\n\n        return (\n            <Popup\n              id={ ADDRESS_POPUP_ID }\n              clickOutside={ false }\n              mix={ { block: 'MyAccountAddressPopup' } }\n            >\n                <div>\n                    <Loader isLoading={ isLoading } />\n                    { this.renderContent() }\n                </div>\n            </Popup>\n        );\n    }\n}\n\nexport default MyAccountAddressPopup;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport MyAccountQuery from 'Query/MyAccount.query';\nimport { goToPreviousNavigationState } from 'Store/Navigation/Navigation.action';\nimport { TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { hideActiveOverlay } from 'Store/Overlay/Overlay.action';\nimport { Addresstype } from 'Type/Account.type';\nimport { isSignedIn } from 'Util/Auth';\nimport { fetchMutation, getErrorMessage } from 'Util/Request';\n\nimport MyAccountAddressPopup from './MyAccountAddressPopup.component';\nimport { ADDRESS_POPUP_ID } from './MyAccountAddressPopup.config';\n\nexport const MyAccountDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/MyAccount/MyAccount.dispatcher'\n);\n\n/** @namespace Component/MyAccountAddressPopup/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    payload: state.PopupReducer.popupPayload[ADDRESS_POPUP_ID] || {}\n});\n\n/** @namespace Component/MyAccountAddressPopup/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    hideActiveOverlay: () => dispatch(hideActiveOverlay()),\n    showErrorNotification: (error) => dispatch(showNotification('error', getErrorMessage(error))),\n    showSuccessNotification: (message) => dispatch(showNotification('success', message)),\n    updateCustomerDetails: () => MyAccountDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.requestCustomerData(dispatch)\n    ),\n    goToPreviousHeaderState: () => dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE))\n});\n\n/** @namespace Component/MyAccountAddressPopup/Container */\nexport class MyAccountAddressPopupContainer extends PureComponent {\n    static propTypes = {\n        showErrorNotification: PropTypes.func.isRequired,\n        showSuccessNotification: PropTypes.func.isRequired,\n        updateCustomerDetails: PropTypes.func.isRequired,\n        hideActiveOverlay: PropTypes.func.isRequired,\n        goToPreviousHeaderState: PropTypes.func.isRequired,\n        payload: PropTypes.shape({\n            address: Addresstype\n        }).isRequired\n    };\n\n    state = {\n        isLoading: false\n    };\n\n    handleAfterAction = this.handleAfterAction.bind(this);\n\n    containerFunctions = {\n        handleAddress: this.handleAddress.bind(this),\n        handleDeleteAddress: this.handleDeleteAddress.bind(this)\n    };\n\n    containerProps() {\n        const { payload } = this.props;\n        const { isLoading } = this.state;\n\n        return { isLoading, payload };\n    }\n\n    async handleAfterAction(status, operation) {\n        const {\n            hideActiveOverlay,\n            updateCustomerDetails,\n            showErrorNotification,\n            goToPreviousHeaderState\n        } = this.props;\n\n        try {\n            await updateCustomerDetails();\n            this.setState({ isLoading: false }, () => {\n                hideActiveOverlay();\n                goToPreviousHeaderState();\n            });\n            this.showAddressNotification(status, operation);\n        } catch (e) {\n            showErrorNotification(e);\n        }\n    }\n\n    handleError(error) {\n        const { showErrorNotification } = this.props;\n\n        showErrorNotification(error);\n        this.setState({ isLoading: false });\n    }\n\n    handleAddress(address) {\n        const { payload: { address: { id } } } = this.props;\n\n        this.setState({ isLoading: true });\n\n        if (id) {\n            return this.handleEditAddress(address);\n        }\n\n        return this.handleCreateAddress(address);\n    }\n\n    showAddressNotification(status, operation) {\n        const { showSuccessNotification, showErrorNotification } = this.props;\n        const message = __('You %s the address', operation).toString();\n\n        switch (status) {\n        case 'success':\n            showSuccessNotification(message);\n            break;\n        case 'error':\n            showErrorNotification(message);\n            break;\n        default:\n            break;\n        }\n    }\n\n    async handleEditAddress(address) {\n        const { payload: { address: { id } } } = this.props;\n\n        const query = MyAccountQuery.getUpdateAddressMutation(id, address);\n\n        if (!isSignedIn()) {\n            return;\n        }\n\n        try {\n            await fetchMutation(query);\n            this.handleAfterAction('success', 'edited');\n        } catch (e) {\n            this.handleError(e);\n        }\n    }\n\n    async handleDeleteAddress() {\n        const { payload: { address: { id } } } = this.props;\n\n        if (!isSignedIn()) {\n            return;\n        }\n\n        this.setState({ isLoading: true });\n        const query = MyAccountQuery.getDeleteAddressMutation(id);\n\n        try {\n            await fetchMutation(query);\n            this.handleAfterAction('success', 'deleted');\n        } catch (e) {\n            this.handleError(e);\n        }\n    }\n\n    async handleCreateAddress(address) {\n        if (!isSignedIn()) {\n            return;\n        }\n\n        const query = MyAccountQuery.getCreateAddressMutation(address);\n\n        try {\n            await fetchMutation(query);\n            this.handleAfterAction('success', 'saved');\n        } catch (e) {\n            this.handleError(e);\n        }\n    }\n\n    render() {\n        return (\n            <MyAccountAddressPopup\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountAddressPopupContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './MyAccountAddressPopup.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\n\nimport Html from 'Component/Html';\nimport { NotificationType } from 'Type/NotificationList.type';\nimport CSS from 'Util/CSS';\n\nimport {\n    ANIMATION_DURATION, ERROR_NOTIFICATION_LIFETIME, ERROR_TYPE, NOTIFICATION_LIFETIME\n} from './Notification.config';\n\nimport './Notification.style';\n\n/**\n * Notification block\n * @class Notification\n * @namespace Component/Notification/Component\n */\nexport class Notification extends PureComponent {\n    static propTypes = {\n        notificationId: PropTypes.string.isRequired,\n        notification: NotificationType.isRequired,\n        onHideNotification: PropTypes.func.isRequired,\n        lifeTime: PropTypes.number,\n        id: PropTypes.string\n    };\n\n    static defaultProps = {\n        lifeTime: 0,\n        id: ''\n    };\n\n    state = { isNotificationVisible: true };\n\n    notification = createRef();\n\n    hideNotification = this.hideNotification.bind(this);\n\n    componentDidMount() {\n        const { notification: { msgType }, lifeTime } = this.props;\n\n        // Make sure error notification stays a little longer\n        if (msgType.toLowerCase() === ERROR_TYPE) {\n            this.hideTimeout = setTimeout(() => this.hideNotification(), lifeTime || ERROR_NOTIFICATION_LIFETIME);\n        } else {\n            this.hideTimeout = setTimeout(() => this.hideNotification(), lifeTime || NOTIFICATION_LIFETIME);\n        }\n\n        CSS.setVariable(this.notification, 'animation-duration', `${ANIMATION_DURATION}ms`);\n    }\n\n    componentWillUnmount() {\n        // clear started timeouts, to assure we are not changing state of unmounted component\n        clearTimeout(this.hideTimeout);\n        clearTimeout(this.CSSHideTimeout);\n    }\n\n    /**\n     * Remove notification from screen\n     * @return {void\n     */\n    hideNotification() {\n        const { onHideNotification, notificationId } = this.props;\n\n        this.setState({ isNotificationVisible: false });\n\n        // give CSS time to animate\n        this.CSSHideTimeout = setTimeout(() => {\n            onHideNotification(notificationId);\n        }, ANIMATION_DURATION);\n    }\n\n    renderDebug() {\n        const { notification: { msgDebug } } = this.props;\n\n        if (!msgDebug) {\n            return null;\n        }\n\n        if (process.env.NODE_ENV === 'production') {\n            return null;\n        }\n\n        // eslint-disable-next-line no-console\n        console.warn(msgDebug); // so we know what was in notification\n\n        return (\n            <pre block=\"Notification\" elem=\"Debug\">\n                { JSON.stringify(msgDebug) }\n            </pre>\n        );\n    }\n\n    render() {\n        const { notification, id } = this.props;\n        const { isNotificationVisible } = this.state;\n        const { msgText, msgType } = notification;\n\n        const mods = {\n            type: msgType.toLowerCase(),\n            is: isNotificationVisible ? 'opening' : 'closing'\n        };\n\n        const message = msgText.value || msgText;\n\n        return (\n            <div block=\"Notification\" mods={ mods } ref={ this.notification } id={ id }>\n                <button block=\"Notification\" elem=\"Button\" onClick={ this.hideNotification }> Close </button>\n                <p block=\"Notification\" elem=\"Text\">\n                    <Html content={ message } />\n                </p>\n                { this.renderDebug() }\n            </div>\n        );\n    }\n}\n\nexport default Notification;\n","/* eslint-disable import/prefer-default-export */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\n// controls CSS animation speed\nexport const ANIMATION_DURATION = 400;\nexport const NOTIFICATION_LIFETIME = 1500;\nexport const ERROR_NOTIFICATION_LIFETIME = 2500;\nexport const ERROR_TYPE = 'error';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './Notification.component';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Notification from 'Component/Notification';\nimport { NotificationListType } from 'Type/NotificationList.type';\n\nimport './NotificationList.style';\n\n/**\n * Notification List\n * @class NotificationList\n * @namespace Component/NotificationList/Component\n */\nexport class NotificationList extends PureComponent {\n    static propTypes = {\n        notifications: NotificationListType.isRequired,\n        onHideNotification: PropTypes.func.isRequired\n    };\n\n    render() {\n        const { onHideNotification, notifications } = this.props;\n\n        return (\n            <div block=\"NotificationList\">\n                { Object.keys(notifications).map((id) => (\n                    <Notification\n                      key={ id }\n                      notificationId={ id }\n                      notification={ notifications[id] }\n                      onHideNotification={ onHideNotification }\n                    />\n                )) }\n            </div>\n        );\n    }\n}\n\nexport default NotificationList;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport { connect } from 'react-redux';\n\nimport { hideNotification } from 'Store/Notification/Notification.action';\nimport NotificationReducer from 'Store/Notification/Notification.reducer';\nimport { withReducers } from 'Util/DynamicReducer';\n\nimport NotificationList from './NotificationList.component';\n\n/** @namespace Component/NotificationList/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    notifications: state.NotificationReducer.notifications\n});\n\n/** @namespace Component/NotificationList/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    onHideNotification: (id) => {\n        dispatch(hideNotification(id));\n    }\n});\n\nexport default withReducers({\n    NotificationReducer\n})(connect(mapStateToProps, mapDispatchToProps)(NotificationList));\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './NotificationList.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nimport ClickOutside from 'Component/ClickOutside';\nimport CloseIcon from 'Component/CloseIcon';\nimport NotificationList from 'Component/NotificationList';\nimport Overlay from 'Component/Overlay/Overlay.component';\nimport history from 'Util/History';\n\nimport { ESCAPE_KEY } from './Popup.config';\n\nimport './Popup.style';\n\n/** @namespace Component/Popup/Component */\nexport class Popup extends Overlay {\n    static propTypes = {\n        ...Overlay.propTypes,\n        clickOutside: PropTypes.bool,\n        title: PropTypes.string\n    };\n\n    static defaultProps = {\n        ...Overlay.defaultProps,\n        clickOutside: true,\n        title: ''\n    };\n\n    hidePopUp = this.hidePopUp.bind(this);\n\n    hidePopupAndGoBack = this.hidePopupAndGoBack.bind(this);\n\n    handleClickOutside = this.handleClickOutside.bind(this);\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown.bind(this));\n    }\n\n    componentDidUpdate(prevProps) {\n        const { shouldPopupClose, resetHideActivePopup } = this.props;\n        const { shouldPopupClose: prevShouldPopupClose } = prevProps;\n\n        if (shouldPopupClose && shouldPopupClose !== prevShouldPopupClose) {\n            this.hidePopUp();\n            resetHideActivePopup();\n        }\n\n        super.componentDidUpdate(prevProps);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown.bind(this));\n    }\n\n    onVisible() {\n        const { onVisible } = this.props;\n\n        this.freezeScroll();\n        this.overlayRef.current.focus();\n\n        window.addEventListener('popstate', this.hidePopUp);\n\n        window.history.pushState(\n            {\n                popupOpen: true\n            },\n            '',\n            `${location.pathname}${location.search}${location.hash}`\n        );\n\n        onVisible();\n    }\n\n    onHide() {\n        const { onHide } = this.props;\n\n        window.removeEventListener('popstate', this.hidePopUp);\n\n        this.unfreezeScroll();\n\n        onHide();\n    }\n\n    hidePopUp() {\n        const { hideActiveOverlay, goToPreviousNavigationState, onClose } = this.props;\n        const isVisible = this.getIsVisible();\n\n        if (isVisible) {\n            this.unfreezeScroll();\n            hideActiveOverlay();\n            goToPreviousNavigationState();\n            onClose();\n        }\n    }\n\n    hidePopupAndGoBack() {\n        this.hidePopUp();\n        history.goBack();\n    }\n\n    // Same with click outside\n    handleClickOutside() {\n        const { clickOutside, isMobile } = this.props;\n\n        if (!clickOutside) {\n            return;\n        }\n\n        if (isMobile) {\n            return;\n        }\n\n        this.hidePopupAndGoBack();\n    }\n\n    handleKeyDown(e) {\n        switch (e.keyCode) {\n        case ESCAPE_KEY:\n            this.hidePopupAndGoBack();\n            break;\n        default:\n            break;\n        }\n    }\n\n    renderTitle() {\n        const { title } = this.props;\n\n        if (!title) {\n            return null;\n        }\n\n        return (\n            <h3 block=\"Popup\" elem=\"Heading\">\n                { title }\n            </h3>\n        );\n    }\n\n    renderCloseButton() {\n        return (\n            <button\n              block=\"Popup\"\n              elem=\"CloseBtn\"\n              aria-label={ __('Close') }\n              onClick={ this.hidePopupAndGoBack }\n            >\n                <CloseIcon />\n            </button>\n        );\n    }\n\n    renderNotifications() {\n        const { isMobile } = this.props;\n\n        if (!isMobile) {\n            return null;\n        }\n\n        return <NotificationList />;\n    }\n\n    renderContent() {\n        const { children, contentMix } = this.props;\n        const isVisible = this.getIsVisible();\n\n        if (!isVisible) {\n            return null;\n        }\n\n        return (\n            <ClickOutside onClick={ this.handleClickOutside }>\n                <div block=\"Popup\" elem=\"Content\" mix={ contentMix }>\n                    <header block=\"Popup\" elem=\"Header\">\n                        { this.renderTitle() }\n                        { this.renderCloseButton() }\n                    </header>\n                    { this.renderNotifications() }\n                    { children }\n                </div>\n            </ClickOutside>\n        );\n    }\n\n    render() {\n        const { mix, areOtherOverlaysOpen } = this.props;\n        const isVisible = this.getIsVisible();\n\n        return createPortal(\n            <div\n              ref={ this.overlayRef }\n              block=\"Popup\"\n              mods={ { isVisible, isInstant: areOtherOverlaysOpen } }\n              mix={ { ...mix, mods: { ...mix.mods, isVisible } } }\n            >\n                { this.renderContent() }\n            </div>,\n            document.body\n        );\n    }\n}\n\nexport default Popup;\n","/* eslint-disable import/prefer-default-export */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport const ESCAPE_KEY = 27;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { POPUP } from 'Component/Header/Header.config';\nimport { changeNavigationState, goToPreviousNavigationState } from 'Store/Navigation/Navigation.action';\nimport { TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { hideActiveOverlay, hideActivePopup } from 'Store/Overlay/Overlay.action';\nimport { ChildrenType, MixType } from 'Type/Common.type';\nimport { noopFn } from 'Util/Common';\n\nimport Popup from './Popup.component';\n\n/** @namespace Component/Popup/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    activeOverlay: state.OverlayReducer.activeOverlay,\n    areOtherOverlaysOpen: state.OverlayReducer.areOtherOverlaysOpen,\n    shouldPopupClose: state.PopupReducer.shouldPopupClose,\n    payload: state.PopupReducer.popupPayload,\n    isMobile: state.ConfigReducer.device.isMobile\n});\n\n/** @namespace Component/Popup/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    hideActiveOverlay: () => dispatch(hideActiveOverlay()),\n    resetHideActivePopup: () => dispatch(hideActivePopup(false)),\n    changeHeaderState: (state) => dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, state)),\n    goToPreviousNavigationState: (state) => dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE, state))\n});\n\n/** @namespace Component/Popup/Container */\nexport class PopupContainer extends PureComponent {\n    static propTypes = {\n        mix: MixType,\n        contentMix: MixType,\n        payload: PropTypes.objectOf(\n            PropTypes.shape({\n                title: PropTypes.string\n            })\n        ).isRequired,\n        activeOverlay: PropTypes.string.isRequired,\n        goToPreviousNavigationState: PropTypes.func.isRequired,\n        areOtherOverlaysOpen: PropTypes.bool.isRequired,\n        changeHeaderState: PropTypes.func.isRequired,\n        onVisible: PropTypes.func,\n        onClose: PropTypes.func,\n        onHide: PropTypes.func,\n        isStatic: PropTypes.bool,\n        children: ChildrenType,\n        id: PropTypes.string.isRequired,\n        shouldPopupClose: PropTypes.bool.isRequired,\n        isMobile: PropTypes.bool.isRequired,\n        hideActiveOverlay: PropTypes.func.isRequired,\n        resetHideActivePopup: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        onVisible: noopFn,\n        onClose: noopFn,\n        onHide: noopFn,\n        mix: {},\n        contentMix: {},\n        children: [],\n        isStatic: false\n    };\n\n    containerFunctions = {\n        onVisible: this.onVisible.bind(this)\n    };\n\n    onVisible() {\n        const { changeHeaderState, onVisible } = this.props;\n\n        changeHeaderState({\n            name: POPUP,\n            title: this._getPopupTitle(),\n            onCloseClick: () => {\n                history.back();\n            }\n        });\n\n        onVisible();\n    }\n\n    containerProps() {\n        const {\n            activeOverlay,\n            areOtherOverlaysOpen,\n            changeHeaderState,\n            children,\n            id,\n            isMobile,\n            isStatic,\n            mix,\n            contentMix,\n            onClose,\n            onHide,\n            onVisible,\n            shouldPopupClose,\n            hideActiveOverlay,\n            resetHideActivePopup,\n            goToPreviousNavigationState\n        } = this.props;\n\n        return {\n            activeOverlay,\n            areOtherOverlaysOpen,\n            changeHeaderState,\n            children,\n            id,\n            isMobile,\n            isStatic,\n            mix,\n            contentMix,\n            shouldPopupClose,\n            onClose,\n            onHide,\n            onVisible,\n            hideActiveOverlay,\n            resetHideActivePopup,\n            goToPreviousNavigationState,\n            title: this._getPopupTitle()\n        };\n    }\n\n    _getPopupTitle() {\n        const { payload, activeOverlay } = this.props;\n        const { title } = payload[activeOverlay] || {};\n\n        return title;\n    }\n\n    render() {\n        return (\n            <Popup\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PopupContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './Popup.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport { HIDE_NOTIFICATION, SHOW_NOTIFICATION } from './Notification.action';\n\n/** @namespace Store/Notification/Reducer/getInitialState */\nexport const getInitialState = () => ({\n    notifications: {}\n});\n\n/** @namespace Store/Notification/Reducer/NotificationReducer */\nexport const NotificationReducer = (\n    state = getInitialState(),\n    action\n) => {\n    const notifications = { ...state.notifications };\n\n    switch (action.type) {\n    case SHOW_NOTIFICATION:\n        const { msgType, msgText, msgDebug } = action;\n\n        notifications[Date.now()] = { msgType, msgText, msgDebug };\n\n        return {\n            ...state,\n            notifications\n        };\n\n    case HIDE_NOTIFICATION:\n        const { [action.id]: id, ...shownNotifications } = notifications;\n\n        return {\n            ...state,\n            notifications: shownNotifications\n        };\n\n    default:\n        return state;\n    }\n};\n\nexport default NotificationReducer;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\n\nexport const NotificationType = PropTypes.shape({\n    msgText: PropTypes.string,\n    msgType: PropTypes.string,\n    msgDebug: PropTypes.arrayOf(\n        PropTypes.shape({\n            message: PropTypes.string,\n            extensions: PropTypes.shape({\n                category: PropTypes.string\n            }),\n            locations: PropTypes.arrayOf(PropTypes.shape({\n                line: PropTypes.number,\n                column: PropTypes.number\n            })),\n            path: PropTypes.arrayOf(PropTypes.string)\n        })\n    )\n});\n\nexport const NotificationListType = PropTypes.objectOf(NotificationType);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\n/**\n * Transforms countries list into select options\n * @param countries\n * @namespace Util/Store/Transform/transformCountriesToOptions\n */\nexport const transformCountriesToOptions = (countries) => {\n    const options = countries.map((country) => {\n        const { id } = country;\n\n        return {\n            value: id,\n            name: id,\n            ...country\n        };\n    });\n\n    const filtered = options.filter(({ label }) => label);\n\n    const sorted = filtered.sort(\n        ({ label }, { label: labelCompare }) => label.localeCompare(labelCompare)\n    );\n\n    return sorted;\n};\n\nexport default transformCountriesToOptions;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAfA;AAiBA;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAAA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAzEA;AAEA;AACA;AAFA;AA0EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAIA;AACA;;;AAAA;AAAA;AAAA;AAAA;AASA;AADA;AARA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AA3CA;AAEA;AACA;AACA;AACA;AAJA;AA4CA;;;;;;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;;;AAAA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AA7HA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAqBA;AACA;AACA;AACA;AACA;AALA;AA0GA;;;;;;;;;;;;;ACzJA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAfA;AA0BA;AACA;AACA;AACA;AACA;AALA;AAzBA;AACA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAGA;AAGA;AACA;AACA;AADA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAtBA;AAuBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AA/MA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AADA;AAsMA;;;;;;;;;;;;;ACzPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAVA;AAcA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAVA;AAcA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAdA;AAmBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAdA;AAmBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAVA;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAVA;AAeA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAVA;AAeA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAPA;AAUA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAfA;AAqBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAbA;AAkBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAbA;AAzCA;AA8DA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAVA;AAgBA;AAEA;;;;;;;;;;;;;ACjUA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;;;AAAA;AAexEA;AAEA;AACA;AACA;AACA;AACA;AAKA;AANA;AAJA;AAyEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,wQAAA;AAKA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAPA;AAAA;AAUA;AACA;;;AAAA;AAAA;AAAA;AAAA;AAaA;AADA;AAZA;AAAA;AAmBA;AACA;AAFA;AAlBA;AACA;AAsBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAjBA;AAkBA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AARA;AAUA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAdA;AAeA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAfA;AAgBA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAZA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AA/IA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAgJA;;;;;;;;;;;;;AClMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAdA;AAAA;AAAA;AACA;AAmBA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,iBAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAjGA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AAFA;AA0FA;;;;;;;;;;;;;AChIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAtBA;AAEA;AACA;AAFA;AAuBA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AACA;AADA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AAEA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAzLA;AAGA;AACA;AAHA;AAQA;AACA;AAHA;AAoLA;;;;;;;;;;;;;ACpNA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAQA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAAA;AAOA;AACA;;;AAAA;AAAA;AAAA;AAAA;AAoCA;AADA;AAnCA;AACA;AAsCA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AA7GA;AAEA;AACA;AACA;AAEA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAsFA;;;;;;;;;;;;;ACzJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAFA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAFA;AACA;AAIA;AACA;AApBA;AAsBA;AA5BA;AA8BA;AACA;;;;;;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AATA;AAJA;AAkBA;AAAA;AACA;;;;;;;;;;;;;;;AChCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;;;;;A","sourceRoot":""}