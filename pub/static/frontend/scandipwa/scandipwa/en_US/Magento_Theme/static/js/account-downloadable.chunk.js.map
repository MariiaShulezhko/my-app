{"version":3,"file":"static/js/account-downloadable.chunk.js","sources":["/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountDownloadable/MyAccountDownloadable.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountDownloadable/MyAccountDownloadable.config.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountDownloadable/MyAccountDownloadable.container.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountDownloadable/index.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountDownloadableTableRow/MyAccountDownloadableTableRow.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountDownloadableTableRow/MyAccountDownloadableTableRow.config.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountDownloadableTableRow/MyAccountDownloadableTableRow.container.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountDownloadableTableRow/index.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/query/Order.query.js"],"sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\n\nimport Loader from 'Component/Loader';\nimport MyAccountDownloadableTableRow from 'Component/MyAccountDownloadableTableRow';\nimport { DownloadableType } from 'Type/Order.type';\n\nimport { NUMBER_OF_COLUMNS_IN_DOWNLOADABLE_TABLE } from './MyAccountDownloadable.config';\n\nimport './MyAccountDownloadable.style';\n\n/** @namespace Component/MyAccountDownloadable/Component */\nexport class MyAccountDownloadableComponent extends Component {\n    static propTypes = {\n        items: PropTypes.arrayOf(DownloadableType).isRequired,\n        isLoading: PropTypes.bool.isRequired\n    };\n\n    shouldComponentUpdate(nextProps) {\n        const { items } = this.props;\n        const { items: nextItems } = nextProps;\n\n        return items !== nextItems;\n    }\n\n    renderNoOrders() {\n        return (\n            <tr\n              block=\"MyAccountMyOrders\"\n              elem=\"NoOrders\"\n              mix={ { block: 'MyDownloadableOrders', elem: 'NoOrders' } }\n            >\n                <td colSpan={ NUMBER_OF_COLUMNS_IN_DOWNLOADABLE_TABLE }>\n                    <p>{ __('You have not purchased any downloadable products yet.') }</p>\n                </td>\n            </tr>\n        );\n    }\n\n    renderOrderHeadingRow() {\n        return (\n            <tr>\n                <th>{ __('Order') }</th>\n                <th>{ __('Date') }</th>\n                <th>{ __('Title') }</th>\n                <th>{ __('Status') }</th>\n                <th>{ __('Remaining Downloads') }</th>\n            </tr>\n        );\n    }\n\n    renderTable() {\n        return (\n            <table\n              block=\"MyAccountMyOrders\"\n              elem=\"Table\"\n              mix={ {\n                  block: 'MyDownloadable'\n              } }\n            >\n                <thead>\n                    { this.renderOrderHeadingRow() }\n                </thead>\n                <tbody>\n                    { this.renderOrderRows() }\n                </tbody>\n            </table>\n        );\n    }\n\n    renderOrderRow(order) {\n        const { id } = order;\n\n        return (\n            <MyAccountDownloadableTableRow\n              key={ id }\n              order={ order }\n            />\n        );\n    }\n\n    renderOrderRows() {\n        const { items, isLoading } = this.props;\n\n        if (!isLoading && !items.length) {\n            return this.renderNoOrders();\n        }\n\n        const orders = items.length\n            ? items\n            : Array.from({ length: 10 }, (_, id) => ({ id }));\n\n        return orders.reduceRight(\n            (acc, e) => [...acc, this.renderOrderRow(e)],\n            []\n        );\n    }\n\n    render() {\n        const { isLoading } = this.props;\n\n        return (\n            <div\n              block=\"MyAccountMyOrders\"\n              mix={ {\n                  block: 'MyDownloadableOrders'\n              } }\n            >\n                <Loader isLoading={ isLoading } />\n                { this.renderTable() }\n            </div>\n        );\n    }\n}\n\nexport default MyAccountDownloadableComponent;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport const NUMBER_OF_COLUMNS_IN_DOWNLOADABLE_TABLE = 5;\n\nexport default NUMBER_OF_COLUMNS_IN_DOWNLOADABLE_TABLE;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport OrderQuery from 'Query/Order.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { DeviceType } from 'Type/Device.type';\nimport { fetchQuery, getErrorMessage } from 'Util/Request';\n\nimport MyAccountDownloadable from './MyAccountDownloadable.component';\n\nexport const OrderDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Order/Order.dispatcher'\n);\n\n/** @namespace Component/MyAccountDownloadable/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    device: state.ConfigReducer.device\n});\n\n/** @namespace Component/MyAccountDownloadable/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showErrorNotification: (message) => dispatch(showNotification('error', message)),\n    showSuccessNotification: (message) => dispatch(showNotification('success', message))\n});\n\n/** @namespace Component/MyAccountDownloadable/Container */\nexport class MyAccountDownloadableContainer extends PureComponent {\n    static propTypes = {\n        device: DeviceType.isRequired,\n        showErrorNotification: PropTypes.func.isRequired,\n        showSuccessNotification: PropTypes.func.isRequired\n    };\n\n    state = {\n        items: [],\n        isLoading: false\n    };\n\n    componentDidMount() {\n        this.requestDownloadable();\n    }\n\n    containerProps() {\n        const { device } = this.props;\n        const { isLoading } = this.state;\n\n        return {\n            device,\n            isLoading,\n            items: this._prepareDownloadableProps()\n        };\n    }\n\n    _prepareDownloadableProps() {\n        const { items } = this.state;\n\n        if (!items?.length) {\n            return [];\n        }\n\n        return items.reduce((acc, item, index) => {\n            acc.push({\n                id: index,\n                order_id: item.order_id,\n                order_increment_id: item.order_increment_id,\n                status_label: item.status,\n                created_at: item.date,\n                download_url: item.download_url,\n                downloads: item.remaining_downloads,\n                title: item.title,\n                link_title: item.link_title\n            });\n\n            return acc;\n        }, []);\n    }\n\n    async requestDownloadable() {\n        const { showErrorNotification } = this.props;\n\n        this.setState({ isLoading: true });\n\n        try {\n            const {\n                customerDownloadableProducts: {\n                    items = []\n                } = {}\n            } = await fetchQuery(OrderQuery.getDownloadableQuery());\n\n            this.setState({ items, isLoading: false });\n        } catch (e) {\n            showErrorNotification(getErrorMessage(e));\n            this.setState({ isLoading: false });\n        }\n    }\n\n    render() {\n        return (\n            <MyAccountDownloadable\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountDownloadableContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './MyAccountDownloadable.container';\n","/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Link from 'Component/Link';\nimport { STATUS_EXPIRED } from 'Component/MyAccountDownloadableTableRow/MyAccountDownloadableTableRow.config';\nimport { DownloadableType } from 'Type/Order.type';\n\nimport './MyAccountDownloadableTableRow.style';\n\n/** @namespace Component/MyAccountDownloadableTableRow/Component */\nexport class MyAccountDownloadableTableRowComponent extends PureComponent {\n    static propTypes = {\n        order: DownloadableType.isRequired,\n        onOrderIdClick: PropTypes.func.isRequired,\n        isOpenInNewTab: PropTypes.bool.isRequired\n    };\n\n    renderOrderIncrementId() {\n        const {\n            order: {\n                order_increment_id\n            },\n            onOrderIdClick\n        } = this.props;\n\n        return (\n            <div onClick={ onOrderIdClick } block=\"MyAccountDownloadTableRow\" elem=\"OrderId\">\n                #\n                { order_increment_id }\n            </div>\n        );\n    }\n\n    renderLink() {\n        const {\n            order: {\n                download_url,\n                link_title,\n                downloads,\n                status_label\n            },\n            isOpenInNewTab\n        } = this.props;\n\n        if (!download_url || !downloads || status_label === STATUS_EXPIRED) {\n            return null;\n        }\n\n        return (\n            <Link\n              to={ download_url }\n              block=\"MyAccountDownloadTableRow\"\n              elem=\"DownloadLink\"\n              isOpenInNewTab={ isOpenInNewTab }\n            >\n                { link_title }\n            </Link>\n        );\n    }\n\n    render() {\n        const {\n            order: {\n                order_increment_id,\n                downloads,\n                created_at,\n                title,\n                status_label = ''\n            } = {}\n        } = this.props;\n\n        return (\n            <tr block=\"MyAccountOrderTableRow\">\n                <td>{ order_increment_id ? this.renderOrderIncrementId() : '' }</td>\n                <td>{ created_at }</td>\n                <td>\n                    { title }\n                    { this.renderLink() }\n                </td>\n                <td block=\"MyAccountDownloadTableRow\" elem=\"Status\">{ status_label }</td>\n                <td>{ downloads }</td>\n            </tr>\n        );\n    }\n}\n\nexport default MyAccountDownloadableTableRowComponent;\n","/* eslint-disable import/prefer-default-export */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport const STATUS_EXPIRED = 'expired';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { ACCOUNT_ORDER_URL } from 'Route/MyAccount/MyAccount.config';\nimport { DeviceType } from 'Type/Device.type';\nimport { DownloadableType } from 'Type/Order.type';\nimport history from 'Util/History';\nimport { appendWithStoreCode } from 'Util/Url';\n\nimport MyAccountDownloadableTableRow from './MyAccountDownloadableTableRow.component';\n\n/** @namespace Component/MyAccountDownloadableTableRow/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    device: state.ConfigReducer.device,\n    isOpenInNewTab: state.ConfigReducer.downloadable_links_target_new_window\n});\n\n/** @namespace Component/MyAccountDownloadableTableRow/Container/mapDispatchToProps */\nexport const mapDispatchToProps = () => ({});\n\n/** @namespace Component/MyAccountDownloadableTableRow/Container */\nexport class MyAccountDownloadableTableRowContainer extends PureComponent {\n    static propTypes = {\n        order: DownloadableType.isRequired,\n        device: DeviceType.isRequired,\n        isOpenInNewTab: PropTypes.bool.isRequired\n    };\n\n    containerFunctions = {\n        onOrderIdClick: this.onOrderIdClick.bind(this)\n    };\n\n    onOrderIdClick() {\n        const { order: { order_id } } = this.props;\n\n        history.push({ pathname: appendWithStoreCode(`${ACCOUNT_ORDER_URL}/${order_id}`) });\n    }\n\n    containerProps() {\n        const { device, order, isOpenInNewTab } = this.props;\n\n        return ({\n            order,\n            device,\n            isOpenInNewTab\n        });\n    }\n\n    render() {\n        return (\n            <MyAccountDownloadableTableRow\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountDownloadableTableRowContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './MyAccountDownloadableTableRow.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport { Field } from 'Util/Query';\n\n/**\n * Order Query\n * @class OrderQuery\n * @namespace Query/Order/Query */\nexport class OrderQuery {\n    getReorder(incrementId) {\n        return new Field('reorderItems')\n            .addArgument('orderNumber', 'String!', incrementId)\n            .addField(this._getReorderField());\n    }\n\n    getSubscribeToOrderStatus(incrementId) {\n        return new Field('subscribeToOrderStatus')\n            .addArgument('orderNumber', 'String!', incrementId)\n            .addFieldList(this._getSubscribeToOrderStatusOutputFields());\n    }\n\n    getOrderListQuery(options) {\n        return new Field('customer')\n            .addFieldList(this._getOrderListFields(options));\n    }\n\n    getOrderByInvoice(invoiceId) {\n        return new Field('orderByInvoice')\n            .addArgument('invoiceId', 'Int!', invoiceId)\n            .addFieldList(this._getOrderItemsFields(true));\n    }\n\n    getOrderByShipment(shipmentId) {\n        return new Field('orderByShipment')\n            .addArgument('shipmentId', 'Int!', shipmentId)\n            .addFieldList(this._getOrderItemsFields(true));\n    }\n\n    getOrderByRefund(refundId) {\n        return new Field('orderByRefund')\n            .addArgument('refundId', 'Int!', refundId)\n            .addFieldList(this._getOrderItemsFields(true));\n    }\n\n    _getOrderListFields(options) {\n        return [\n            this._getOrdersField(options)\n        ];\n    }\n\n    _getOrdersField(options) {\n        const { orderId, page = 1 } = options || {};\n        const ordersField = new Field('orders');\n\n        if (orderId) {\n            return ordersField\n                .addArgument('filter', 'CustomerOrdersFilterInput', { entity_id: { eq: orderId } })\n                .addFieldList(this._getOrdersFields(true));\n        }\n\n        return ordersField\n            .addArgument('currentPage', 'Int', page)\n            .addFieldList(this._getOrdersFields());\n    }\n\n    _getOrdersFields(isSingleOrder = false) {\n        return [\n            'total_count',\n            this._getOrderItemsField(isSingleOrder),\n            this._getSearchResultPageInfoField()\n        ];\n    }\n\n    _getSearchResultPageInfoField() {\n        return new Field('page_info')\n            .addFieldList(this._getSearchResultPageInfoFields());\n    }\n\n    _getSearchResultPageInfoFields() {\n        return [\n            'current_page',\n            'page_size',\n            'total_pages'\n        ];\n    }\n\n    _getOrderItemsField(isSingleOrder) {\n        return new Field('items')\n            .addFieldList(this._getOrderItemsFields(isSingleOrder));\n    }\n\n    _getOrderItemsFields(isSingleOrder) {\n        const basicFields = [\n            'id',\n            'increment_id',\n            'order_date',\n            'status',\n            'can_reorder',\n            'rss_link',\n            this._getOrderItemTotalField()\n        ];\n\n        if (isSingleOrder) {\n            return [...basicFields, ...this._getSingleOrderFields()];\n        }\n\n        return basicFields;\n    }\n\n    _getSingleOrderFields() {\n        return [\n            'carrier',\n            this._getOrderShipmentsField(),\n            this._getOrderItemsProductsField(),\n            this._getOrderInvoicesField(),\n            this._getOrderRefundsField(),\n            this._getOrderShippingAddressField(),\n            this._getOrderBillingAddressField(),\n            this._getOrderPaymentMethodsField(),\n            this._getOrderShippingMethodField(),\n            this._getOrderCommentsField()\n        ];\n    }\n\n    _getOrderCommentsField() {\n        return new Field('comments')\n            .addFieldList(this._getOrderCommentsFields());\n    }\n\n    _getOrderCommentsFields() {\n        return [\n            'timestamp',\n            'message'\n        ];\n    }\n\n    _getOrderItemTotalField() {\n        return new Field('total')\n            .addFieldList(this._getOrderItemTotalFields());\n    }\n\n    _getOrderItemTotalFields() {\n        return [\n            this._getOrderGrandTotalField(),\n            this._getOrderDiscountsField(),\n            this._getOrderBaseGrantTotalField(),\n            this._getOrderSubtotalField(),\n            this._getOrderTotalShippingField(),\n            this._getOrderTotalTaxField(),\n            this._getOrderShippingHandlingField(),\n            this._getOrderTaxesField()\n        ];\n    }\n\n    _getOrderTaxesField() {\n        return new Field('taxes')\n            .addFieldList(this._getOrderTaxesFields());\n    }\n\n    _getOrderTaxesFields() {\n        return [\n            'rate',\n            'title',\n            this._getOrderAmountField()\n        ];\n    }\n\n    _getOrderShippingHandlingField() {\n        return new Field('shipping_handling')\n            .addFieldList(this._getOrderShippingHandlingFields());\n    }\n\n    _getOrderShippingHandlingFields() {\n        return [\n            this._getOrderShippingAmountExclTaxField(),\n            this._getOrderShippingAmountInclTaxField(),\n            this._getOrderShippingDiscountsField(),\n            this._getOrderShippingHandlingTotalField(),\n            this._getOrderTaxesField()\n        ];\n    }\n\n    _getOrderShippingDiscountsField() {\n        return new Field('discounts')\n            .addFieldList(this._getOrderShippingDiscountsFields());\n    }\n\n    _getOrderShippingDiscountsFields() {\n        return [\n            this._getOrderAmountField()\n        ];\n    }\n\n    _getOrderShippingAmountExclTaxField() {\n        return new Field('amount_excluding_tax')\n            .addFieldList(this._getOrderPriceFields());\n    }\n\n    _getOrderShippingAmountInclTaxField() {\n        return new Field('amount_including_tax')\n            .addFieldList(this._getOrderPriceFields());\n    }\n\n    _getOrderShippingHandlingTotalField() {\n        return new Field('total_amount')\n            .addFieldList(this._getOrderPriceFields());\n    }\n\n    _getOrderTotalTaxField() {\n        return new Field('total_tax')\n            .addFieldList(this._getOrderPriceFields());\n    }\n\n    _getOrderTotalShippingField() {\n        return new Field('total_shipping')\n            .addFieldList(this._getOrderPriceFields());\n    }\n\n    _getOrderBaseGrantTotalField() {\n        return new Field('base_grand_total')\n            .addFieldList(this._getOrderPriceFields());\n    }\n\n    _getOrderSubtotalField() {\n        return new Field('subtotal')\n            .addFieldList(this._getOrderPriceFields());\n    }\n\n    _getOrderGrandTotalField() {\n        return new Field('grand_total')\n            .addFieldList(this._getOrderPriceFields());\n    }\n\n    _getOrderPriceFields() {\n        return [\n            'value',\n            'currency'\n        ];\n    }\n\n    _getOrderShipmentsField() {\n        return new Field('shipments')\n            .addFieldList(this._getOrderShipmentsFields());\n    }\n\n    _getOrderShipmentsFields() {\n        return [\n            'id',\n            'number',\n            this._getOrderCommentsField(),\n            this._getOrderShipmentTrackingField(),\n            this._getShipmentsItemsProductsField()\n        ];\n    }\n\n    _getShipmentsItemsProductsField() {\n        return new Field('items')\n            .addFieldList(this._getShipmentsItemsProductsFields());\n    }\n\n    _getShipmentsItemsProductsFields() {\n        return [\n            'quantity_shipped',\n            ...this._getBaseOrderItemProductsFields()\n        ];\n    }\n\n    _getOrderShipmentTrackingField() {\n        return new Field('tracking')\n            .addFieldList(this._getOrderShipmentTrackingFields());\n    }\n\n    _getOrderShipmentTrackingFields() {\n        return [\n            'carrier',\n            'number',\n            'title'\n        ];\n    }\n\n    _getOrderRefundsField() {\n        return new Field('credit_memos')\n            .addFieldList(this._getOrderRefundsFields());\n    }\n\n    _getOrderRefundsFields() {\n        return [\n            'id',\n            'number',\n            this._getOrderCommentsField(),\n            this._getRefundsItemsProductsField(),\n            this._getOrderItemTotalField()\n        ];\n    }\n\n    _getOrderDiscountsField() {\n        return new Field('discounts')\n            .addFieldList(this._getOrderDiscountsFields());\n    }\n\n    _getOrderDiscountsFields() {\n        return [\n            'label',\n            this._getOrderAmountField()\n        ];\n    }\n\n    _getOrderAmountField() {\n        return new Field('amount')\n            .addFieldList(this._getOrderPriceFields());\n    }\n\n    _getRefundsItemsProductsField() {\n        return new Field('items')\n            .addFieldList(this._getRefundsItemsProductsFields());\n    }\n\n    _getRefundsItemsProductsFields() {\n        return [\n            'quantity_refunded',\n            ...this._getBaseOrderItemProductsFields(),\n            this._getRefundsItemInformationField(),\n            this._getOrderProductRowSubtotalField(),\n            this._getOrderDiscountsField()\n        ];\n    }\n\n    _getRefundsItemInformationField() {\n        return new Field('order_item')\n            .addFieldList(this._getOrderItemProductsFields());\n    }\n\n    _getOrderInvoicesField() {\n        return new Field('invoices')\n            .addFieldList(this._getOrderInvoicesFields());\n    }\n\n    _getOrderInvoicesFields() {\n        return [\n            'id',\n            'number',\n            this._getOrderCommentsField(),\n            this._getInvoiceItemsProductsField(),\n            this._getOrderItemTotalField()\n        ];\n    }\n\n    _getInvoiceItemsProductsField() {\n        return new Field('items')\n            .addFieldList(this._getInvoiceItemProductsFields());\n    }\n\n    _getInvoiceItemProductsFields() {\n        return [\n            'quantity_invoiced',\n            this._getOrderProductRowSubtotalField(),\n            ...this._getBaseOrderItemProductsFields()\n        ];\n    }\n\n    _getOrderItemsProductsField() {\n        return new Field('items')\n            .addFieldList(this._getOrderItemProductsFields());\n    }\n\n    _getOrderItemProductsFields() {\n        return [\n            'product_url_key',\n            'quantity_ordered',\n            'quantity_shipped',\n            'quantity_refunded',\n            'quantity_canceled',\n            this._getOrderProductEnteredOptionsField(),\n            this._getOrderProductSelectedOptionsField(),\n            this._getOrderProductRowSubtotalField(),\n            ...this._getBaseOrderItemProductsFields()\n        ];\n    }\n\n    _getBaseOrderItemProductsFields() {\n        return [\n            'product_name',\n            'product_sku',\n            this._getOrderProductSalePriceField()\n        ];\n    }\n\n    _getOrderProductRowSubtotalField() {\n        return new Field('row_subtotal')\n            .addFieldList(this._getOrderPriceFields());\n    }\n\n    _getOrderProductRowSubtotalInclTaxField() {\n        return new Field('row_subtotal_incl_tax')\n            .addFieldList(this._getOrderPriceFields());\n    }\n\n    _getOrderProductEnteredOptionsField() {\n        return new Field('entered_options')\n            .addFieldList(this._getOrderProductOptionsFields());\n    }\n\n    _getOrderProductSelectedOptionsField() {\n        return new Field('selected_options')\n            .addFieldList(this._getOrderProductOptionsFields());\n    }\n\n    _getOrderProductOptionsFields() {\n        return [\n            'label',\n            'value',\n            this._getOrderProductBundleOptionItemsField(),\n            'linkItems'\n        ];\n    }\n\n    _getOrderProductBundleOptionItemsField() {\n        return new Field('items')\n            .addFieldList(this._getOrderProductBundleOptionItemsFields());\n    }\n\n    _getOrderProductBundleOptionItemsFields() {\n        return [\n            'title',\n            'qty',\n            'price'\n        ];\n    }\n\n    _getOrderProductSalePriceField() {\n        return new Field('product_sale_price')\n            .addFieldList(this._getOrderPriceFields());\n    }\n\n    _getReorderField() {\n        return new Field('userInputErrors')\n            .addFieldList(this._getReorderFields());\n    }\n\n    _getReorderFields() {\n        return [\n            'code',\n            'message',\n            'path'\n        ];\n    }\n\n    _getOrderShippingAddressField() {\n        return new Field('shipping_address')\n            .addFieldList(this._getOrderAddressFields());\n    }\n\n    _getOrderBillingAddressField() {\n        return new Field('billing_address')\n            .addFieldList(this._getOrderAddressFields());\n    }\n\n    _getOrderAddressFields() {\n        return [\n            'city',\n            'country_id',\n            'firstname',\n            'lastname',\n            'postcode',\n            'region',\n            'region_id',\n            'telephone',\n            'vat_id',\n            this._getOrderAddressStreetField()\n        ];\n    }\n\n    _getOrderAddressStreetField() {\n        return new Field('street');\n    }\n\n    _getOrderPaymentMethodsField() {\n        return new Field('payment_methods')\n            .addFieldList(this._getOrderPaymentMethodsFields());\n    }\n\n    _getOrderPaymentMethodsFields() {\n        return [\n            'name',\n            'type',\n            'purchase_number',\n            this._getOrderPaymentMethodAdditionalField()\n        ];\n    }\n\n    _getOrderPaymentMethodAdditionalField() {\n        return new Field('additional_data')\n            .addFieldList(this._getOrderPaymentMethodAdditionalFields());\n    }\n\n    _getOrderPaymentMethodAdditionalFields() {\n        return [\n            'name',\n            'value'\n        ];\n    }\n\n    _getOrderShippingMethodField() {\n        return new Field('shipping_method');\n    }\n\n    getDownloadableQuery() {\n        return new Field('customerDownloadableProducts')\n            .addField(this._getDownloadableField());\n    }\n\n    getOrderByIdQuery(orderId) {\n        return this._getOrderByIdField(orderId);\n    }\n\n    linkOrderMutation(customerEmail) {\n        return new Field('linkOrder')\n            .addArgument('customer_email', 'String!', customerEmail);\n    }\n\n    _getOrderByIdField(orderId) {\n        return new Field('Customer')\n            .addArgument('id', 'Int!', orderId)\n            .addFieldList(this._getOrderItemsFields());\n    }\n\n    _getDownloadableField() {\n        return new Field('items')\n            .addFieldList(this._getDownloadableFields());\n    }\n\n    _getDownloadableFields() {\n        return [\n            'order_id',\n            'order_increment_id',\n            'date',\n            'status',\n            'download_url',\n            'link_title',\n            'remaining_downloads',\n            'title'\n        ];\n    }\n}\n\nexport default new OrderQuery();\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;;;AAAA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AArGA;AAEA;AACA;AAFA;AAsGA;;;;;;;;;;;;;AC9HA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA,oPAAA;AAKA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAKA;AACA;;;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAFA;AAPA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAhBA;AAiBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AA7EA;AAEA;AACA;AACA;AAHA;AA8EA;;;;;;;;;;;;;ACtHA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;;;AAAA;AAOA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAOA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAPA;AACA;AASA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AA1EA;AAEA;AACA;AACA;AAHA;AA2EA;;;;;;;;;;;;;AClGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;;AAAA;AAAA;AAAA;AAAA;AAQA;AADA;AAPA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAnCA;AAEA;AACA;AACA;AAHA;AAoCA;;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAUA;AACA;AAvhBA;AAyhBA;;;;;A","sourceRoot":""}