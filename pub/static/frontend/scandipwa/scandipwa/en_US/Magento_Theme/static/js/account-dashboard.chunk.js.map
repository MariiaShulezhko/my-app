{"version":3,"file":"static/js/account-dashboard.chunk.js","sources":["/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountCustomerTable/MyAccountCustomerTable.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountCustomerTable/MyAccountCustomerTable.container.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountCustomerTable/index.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountDashboard/MyAccountDashboard.component.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountDashboard/MyAccountDashboard.container.js","/Users/mariasulezko/PhpStormProject/test/my-app/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountDashboard/index.js"],"sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\n\nimport KeyValueTable from 'Component/KeyValueTable';\nimport { CustomerType } from 'Type/Account.type';\n\n/** @namespace Component/MyAccountCustomerTable/Component */\nexport class MyAccountCustomerTable extends KeyValueTable {\n    static propTypes = {\n        handleOnEditInformation: PropTypes.func.isRequired,\n        handleOnEditPassword: PropTypes.func.isRequired,\n        customer: CustomerType.isRequired\n    };\n\n    get dataPairArray() {\n        const { customer } = this.props;\n\n        return [\n            {\n                key: 'firstname',\n                label: __('First name'),\n                source: customer\n            },\n            {\n                key: 'lastname',\n                label: __('Last name'),\n                source: customer\n            },\n            {\n                key: 'taxvat',\n                label: __('Tax/VAT Number'),\n                source: customer\n            },\n            {\n                key: 'email',\n                label: __('Email'),\n                source: customer\n            }\n        ];\n    }\n\n    renderActions() {\n        const { handleOnEditInformation, handleOnEditPassword } = this.props;\n\n        return (\n            <>\n                <button\n                  block=\"Button\"\n                  mods={ { isHollow: true } }\n                  onClick={ handleOnEditInformation }\n                >\n                    { __('Edit details') }\n                </button>\n                <button\n                  block=\"Button\"\n                  mods={ { isHollow: true, isWithoutBorder: true } }\n                  onClick={ handleOnEditPassword }\n                >\n                    { __('Change password') }\n                </button>\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <div block=\"MyAccountCustomerTable\">\n                { this.renderTable() }\n                { this.renderActions() }\n            </div>\n        );\n    }\n}\n\nexport default MyAccountCustomerTable;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { ACCOUNT_INFORMATION_EDIT_URL } from 'Route/MyAccount/MyAccount.config';\nimport { CustomerType } from 'Type/Account.type';\nimport history from 'Util/History';\nimport { appendWithStoreCode } from 'Util/Url';\n\nimport MyAccountCustomerTable from './MyAccountCustomerTable.component';\n\n/** @namespace Component/MyAccountCustomerTable/Container */\nexport class MyAccountCustomerTableContainer extends PureComponent {\n    static propTypes = {\n        customer: CustomerType.isRequired,\n        title: PropTypes.string\n    };\n\n    static defaultProps = {\n        title: ''\n    };\n\n    containerFunctions = {\n        handleOnEditPassword: this.handleOnEditPassword.bind(this),\n        handleOnEditInformation: this.handleOnEditInformation.bind(this)\n    };\n\n    containerProps() {\n        const {\n            customer,\n            title\n        } = this.props;\n\n        return {\n            customer,\n            title\n        };\n    }\n\n    handleOnEditPassword() {\n        history.push({\n            pathname: appendWithStoreCode(ACCOUNT_INFORMATION_EDIT_URL),\n            state: { editPassword: true }\n        });\n    }\n\n    handleOnEditInformation() {\n        history.push({ pathname: appendWithStoreCode(ACCOUNT_INFORMATION_EDIT_URL) });\n    }\n\n    render() {\n        return (\n            <MyAccountCustomerTable\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default MyAccountCustomerTableContainer;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './MyAccountCustomerTable.container';\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Link from 'Component/Link';\nimport Loader from 'Component/Loader';\nimport MyAccountAddressTable from 'Component/MyAccountAddressTable';\nimport MyAccountCustomerTable from 'Component/MyAccountCustomerTable';\nimport { ACCOUNT_URL } from 'Route/MyAccount/MyAccount.config';\nimport { ADDRESS_BOOK, CustomerType } from 'Type/Account.type';\n\nimport './MyAccountDashboard.style';\n\n/** @namespace Component/MyAccountDashboard/Component */\nexport class MyAccountDashboard extends PureComponent {\n    static propTypes = {\n        customer: CustomerType.isRequired,\n        getDefaultAddress: PropTypes.func.isRequired\n    };\n\n    renderNoDefaultAddressConfigured(name) {\n        return (\n            <div\n              key={ name }\n              block=\"MyAccountDashboard\"\n              elem=\"DefaultAddress\"\n            >\n                <p block=\"MyAccountDashboard\" elem=\"Info\">{ __('No %s address configured.', name) }</p>\n                { this.renderLinkToAddressBook() }\n            </div>\n        );\n    }\n\n    renderLinkToAddressBook() {\n        return (\n            <p block=\"MyAccountDashboard\" elem=\"Info\">\n                <Link to={ `${ACCOUNT_URL}/${ADDRESS_BOOK}` }>\n                    { __('Go to \"Address Book\", to configure them!') }\n                </Link>\n            </p>\n        );\n    }\n\n    renderDefaultAddressTable(isBilling) {\n        const { getDefaultAddress } = this.props;\n        const name = isBilling ? __('billing') : __('shipping');\n        const address = getDefaultAddress(isBilling);\n\n        if (!address) {\n            return this.renderNoDefaultAddressConfigured(name);\n        }\n\n        return (\n            <div\n              key={ name }\n              block=\"MyAccountDashboard\"\n              elem=\"DefaultAddress\"\n            >\n                <MyAccountAddressTable\n                  address={ address }\n                  title={ __('Default %s address', name) }\n                />\n            </div>\n        );\n    }\n\n    renderAddressBlockTitle() {\n        return (\n            <div block=\"MyAccountDashboard\" elem=\"BlockTitle\">\n                <span>{ __('Address Book') }</span>\n                <Link to={ `${ACCOUNT_URL}/${ADDRESS_BOOK}` }>\n                    { __('Manage Addresses') }\n                </Link>\n            </div>\n        );\n    }\n\n    renderNoAddresses() {\n        return (\n            <div>\n                { this.renderAddressBlockTitle() }\n                <p block=\"MyAccountDashboard\" elem=\"Info\">{ __('You have no configured addresses.') }</p>\n                { this.renderLinkToAddressBook() }\n            </div>\n        );\n    }\n\n    renderDefaultAddressTables() {\n        const { customer: { addresses = [] } } = this.props;\n\n        if (!addresses.length) {\n            return this.renderNoAddresses();\n        }\n\n        return (\n            <div block=\"MyAccountDashboard\" elem=\"Addresses\">\n                { this.renderAddressBlockTitle() }\n                <div block=\"MyAccountDashboard\" elem=\"AddressesWrapper\">\n                    { this.renderDefaultAddressTable() }\n                    { this.renderDefaultAddressTable(true) }\n                </div>\n            </div>\n        );\n    }\n\n    renderCustomerTable() {\n        const { customer } = this.props;\n\n        return (\n            <div block=\"MyAccountDashboard\" elem=\"CustomerData\">\n                <div block=\"MyAccountDashboard\" elem=\"BlockTitle\">\n                    <span>{ __('Account Information') }</span>\n                </div>\n                <MyAccountCustomerTable\n                  customer={ customer }\n                  title={ __('My profile') }\n                />\n            </div>\n        );\n    }\n\n    render() {\n        const { customer } = this.props;\n\n        return (\n            <div block=\"MyAccountDashboard\">\n                <Loader isLoading={ !Object.keys(customer).length } />\n                { this.renderCustomerTable() }\n                { this.renderDefaultAddressTables() }\n            </div>\n        );\n    }\n}\n\nexport default MyAccountDashboard;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { CustomerType } from 'Type/Account.type';\n\nimport MyAccountDashboard from './MyAccountDashboard.component';\n\n/** @namespace Component/MyAccountDashboard/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    customer: state.MyAccountReducer.customer\n});\n\n/** @namespace Component/MyAccountDashboard/Container/mapDispatchToProps */\nexport const mapDispatchToProps = () => ({});\n\n/** @namespace Component/MyAccountDashboard/Container */\nexport class MyAccountDashboardContainer extends PureComponent {\n    static propTypes = {\n        customer: CustomerType.isRequired\n    };\n\n    containerFunctions = {\n        getDefaultAddress: this.getDefaultAddress.bind(this)\n    };\n\n    containerProps() {\n        const { customer } = this.props;\n\n        return { customer };\n    }\n\n    getDefaultAddress(isBilling) {\n        const { customer: { addresses = [] } } = this.props;\n        const key = isBilling ? 'default_billing' : 'default_shipping';\n\n        return addresses.find(({ [key]: defaultAddress }) => defaultAddress);\n    }\n\n    render() {\n        return (\n            <MyAccountDashboard\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountDashboardContainer);\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/scandipwa\n * @link https://github.com/scandipwa/scandipwa\n */\n\nexport { default } from './MyAccountDashboard.container';\n"],"mappings":"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","sourceRoot":""}