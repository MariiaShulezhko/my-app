/**
 * ScandiPWA - Progressive Web App for Magento
 *
 * Copyright Â© Scandiweb, Inc. All rights reserved.
 * See LICENSE for license details.
 *
 * @license OSL-3.0 (Open Software License ("OSL") v. 3.0)
 */

type Query {
    orderByInvoice (invoiceId: Int!): CustomerOrder @resolver(class: "ScandiPWA\\SalesGraphQl\\Model\\Resolver\\Invoice\\PrintInvoice")
    orderByShipment (shipmentId: Int!): CustomerOrder @resolver(class: "ScandiPWA\\SalesGraphQl\\Model\\Resolver\\Shipment\\PrintShipment")
    orderByRefund (refundId: Int!): CustomerOrder @resolver(class: "ScandiPWA\\SalesGraphQl\\Model\\Resolver\\CreditMemo\\PrintCreditMemo")
}

input CustomerOrdersFilterInput @doc(description: "Identifies the filter to use for filtering orders.") {
    entity_id: FilterStringTypeInput @doc(description: "Filters by order entity id.")
}

type CustomerOrder @doc(description: "Contains details about each of the customer's orders") {
    can_reorder: Boolean! @doc(description: "Defines if order can be reordered")
    rss_link: String @doc(description: "Represents rss link to subscribe on order status")
}

interface OrderItemInterface {
   row_subtotal: Money! @doc(description: "The row subtotal price, including selected options")
}

interface CreditMemoItemInterface {
   row_subtotal: Money! @doc(description: "The row subtotal price, including selected options")
}

interface InvoiceItemInterface {
   row_subtotal: Money! @doc(description: "The row subtotal price, including selected options")
}

type OrderItemOption {
    label: String! @doc(description: "The name of the option")
    value: String @doc(description: "The value of the option")
    items: [BundleOption]
    linkItems: [String]
}

type BundleOptions @doc(description: "Represents order bundle item options") {
    type: String! @doc(description: "Describes type of bundle option (radio, checkbox and etc)")
    items: [BundleOption]
}

type BundleOption {
    title: String
    qty: Int
    price: Float
}

type OrderPaymentMethod {
    purchase_number: String @doc(description: "Defines order purchase number")
}

type OrderAddress {
    country_id: CountryCodeEnum @doc(description: "The customer's country")
}

type Discount @doc(description:"Defines an individual discount. A discount can be applied to the cart as a whole or to an item.") {
    amount: Money! @doc(description:"The amount of the discount")
    label: String @doc(description:"A description of the discount")
}